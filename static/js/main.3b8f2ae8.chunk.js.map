{"version":3,"sources":["context/Settings.js","context/globalStyle.js","context/Auth.js","context/Theme.js","components/pages/Error/index.js","components/uiElements/MainContainer/index.js","components/uiElements/Button/index.js","components/uiElements/Menu/MenuListItem.js","components/uiElements/Menu/MenuList.js","components/uiElements/Input/index.js","components/uiElements/Spinner/index.js","hooks/useHttpRequest.js","utils/handleSessionStorage.js","components/uiElements/LoginForm/index.js","components/uiElements/SideBar/index.js","components/uiElements/Menu/index.js","components/uiElements/PageContainer/index.js","components/uiElements/Footer/index.js","components/pages/Home/index.js","components/pages/AddNote/index.js","components/pages/History/HistoryItem.js","components/pages/History/index.js","components/uiElements/RoundButton/index.js","components/uiElements/Note/index.js","components/pages/UserPanel/UserNotes.js","components/uiElements/Checkbox/index.js","components/uiElements/Slider/index.js","components/pages/Settings/index.js","components/pages/UserPanel/index.js","components/App.js","index.js"],"names":["SettingsContext","createContext","darkMode","SettingsContextProvider","children","useState","setDarkMode","fontSize","setFontSize","Provider","value","GlobalStyle","createGlobalStyle","theme","fonts","main","GlobalStyleProvider","useContext","AuthContext","AuthContextProvider","isLoggedIn","setIsLoggedIn","userID","setUserID","isLogged","console","error","Theme","colors","off","gray","blue","red","100","200","300","400","500","background","text","Wrapper","styled","div","Error","props","icon","faDizzy","location","state","code","MainContainer","Btn","Link","danger","disabled","isActive","Button","path","onClick","to","as","e","preventDefault","MenuListItem","toggleMenuVisibility","ul","MenuList","listItems","elements","listElements","i","length","push","renderListItems","Label","label","InputEl","input","Input","inputSize","type","desc","onChange","size","handleInputChange","target","textAreaStyle","resize","height","flexBasis","InputType","style","Container","LoadingSpinner","d","color","Overlay","Description","p","Spinner","overlay","containerRef","useRef","useEffect","spinner","current","gsap","rotation","repeat","duration","ease","ref","useHttpRequest","setError","isLoading","setIsLoading","sendRequest","useCallback","url","a","method","body","headers","fetch","response","json","responseData","ok","message","statusCode","status","clearError","getSessionItem","key","sessionStorage","getItem","undefined","setSessionItem","prev","setItem","Form","form","FormError","FormTitle","h2","LoginForm","isInSignUpMode","setIsInSignUpMode","name","setName","email","setEmail","password","setPassword","handleFormSubmit","JSON","stringify","token","log","buttonContent","titleContent","isButtonDisabled","faPaperPlane","Bar","dark","CloseBtn","button","Backdrop","isOpen","SideBar","setIsOpen","backdropRef","backdrop","handleBackdropClick","addEventListener","removeEventListener","timeout","match","join","CSSTransition","in","classNames","unmountOnExit","faTimes","MenuTitle","h1","MenuBar","Menu","title","isFormOpen","setIsFormOpen","useParams","history","useHistory","menuLinks","faClipboard","faHome","faPowerOff","links","slice","direction","PageContainer","Footer","NoteCard","section","order","area","side","Home","faPenFancy","faEdit","faHistory","h3","AddNote","createMode","onBodyChange","onTitleChange","onFormSubmit","NoteTitle","h5","NoteDate","span","NoteBody","HistoryItem","completed","Title","NotesWrapper","NotesHistory","historyNotes","setHistoryNotes","process","REACT_APP_BASE_URL","Authorization","notes","fetchHistory","map","note","date","split","renderHistoryNotes","RoundBtn","RoundButton","NoteInfo","NoteTime","NoteSettings","Icon","tooltip","h6","Note","createdAt","_id","onNoteEdit","onNoteRemove","dateString","timeString","faTrashAlt","UserNotes","userNotes","index","Box","Info","Checkbox","description","initialValue","checkboxState","setCheckboxState","faCheck","toUpperCase","isChecked","OptionBar","InnerBar","attrs","width","Draggable","left","position","Slider","min","max","sliderPosition","setSliderPosition","bar","getBoundingClientRect","range","Math","abs","floor","sliderWidth","updateBarInfo","step","offsetLeft","clientX","stopDrag","document","onMouseDown","Section","Settings","handleClearHistory","Options","ButtonContainer","UserPanel","setUserNotes","noteTitle","setNoteTitle","noteBody","setNoteBody","setCreateMode","editedNoteId","setEditedNoteId","isAddNoteOpen","setIsAddNoteOpen","isHistoryOpen","setIsHistoryOpen","isSettingsOpen","setIsSettingsOpen","fetchNotes","handleNoteAdd","newNotes","handleNoteRemove","id","filter","el","handleAddNote","handleNotesHistory","handleSettings","pathname","faPlus","faCog","setNotes","App","component","exact","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3b8f2ae8.chunk.js","sourcesContent":["import { createContext, useState } from \"react\";\r\n\r\nexport const SettingsContext = createContext({ darkMode: false });\r\n\r\nexport const SettingsContextProvider = ({ children }) => {\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const [fontSize, setFontSize] = useState(16);\r\n\r\n  return (\r\n    <SettingsContext.Provider\r\n      value={{ darkMode, setDarkMode, fontSize, setFontSize }}\r\n    >\r\n      {children}\r\n    </SettingsContext.Provider>\r\n  );\r\n};\r\n\r\nexport default SettingsContext;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport { useContext } from \"react\";\r\n\r\nimport SettingsContext from \"context/Settings\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    * {\r\n        margin: 0;\r\n        padding: 0;\r\n        box-sizing: border-box;\r\n        font-family: ${({ theme }) => theme.fonts.main};\r\n    }\r\n\r\n    :root {\r\n\r\n    }\r\n\r\n    body {\r\n        overflow: hidden;\r\n        font-size: ${({ fontSize }) => fontSize}px;\r\n    }\r\n\r\n    a {\r\n        text-decoration: none;\r\n    }\r\n\r\n    button {\r\n        border: none;\r\n        outline: none;\r\n        background: none;\r\n\r\n        cursor: pointer;\r\n    }\r\n\r\n    button:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst GlobalStyleProvider = ({ children }) => {\r\n  const { fontSize } = useContext(SettingsContext);\r\n  return <GlobalStyle fontSize={fontSize}>{children}</GlobalStyle>;\r\n};\r\n\r\nexport default GlobalStyleProvider;\r\n","import { createContext, useState } from \"react\";\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport const AuthContextProvider = ({ children }) => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [userID, setUserID] = useState(null);\r\n\r\n  const handleStatusChange = isLogged => {\r\n    if (typeof isLogged === \"boolean\") {\r\n      setIsLoggedIn(isLogged);\r\n    } else {\r\n      console.error(`Expected boolean, instead got ${typeof isLogged}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isLoggedIn: isLoggedIn,\r\n        setIsLoggedIn: handleStatusChange,\r\n        userID: userID,\r\n        setUserID: setUserID,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n","import { ThemeProvider } from \"styled-components\";\r\nimport { useContext } from \"react\";\r\n\r\nimport SettingsContext from \"../context/Settings\";\r\n\r\nconst Theme = ({ children }) => {\r\n  const { darkMode } = useContext(SettingsContext);\r\n\r\n  // TODO: add darkmode\r\n  const theme = {\r\n    colors: {\r\n      main: darkMode ? \"rgb(121, 137, 140)\" : \"rgb(143, 193, 204)\",\r\n      off: darkMode ? \"rgb(66, 88, 122)\" : \"rgb(255, 219, 120)\",\r\n      gray: \"rgb(140, 140, 140)\",\r\n      blue: \"rgb(102, 173, 189)\",\r\n      red: {\r\n        100: \"rgb(255, 226, 219)\",\r\n        200: \"rgb(222, 175, 164)\",\r\n        300: \"rgb(199, 125, 107)\",\r\n        400: \"rgb(222, 69, 33)\",\r\n        500: \"rgb(181, 34, 0)\",\r\n      },\r\n      background: darkMode ? \"rgb(50, 50, 50)\" : \"rgb(255, 255, 255)\",\r\n      text: darkMode ? \"rgb(200, 200, 200)\" : \"rgb(0, 0, 0)\",\r\n    },\r\n    fonts: {\r\n      main: \"'Blinker', sans-serif\",\r\n    },\r\n  };\r\n\r\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>;\r\n};\r\n\r\nexport default Theme;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faDizzy } from \"@fortawesome/free-solid-svg-icons\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Error = props => {\r\n  return (\r\n    <Wrapper>\r\n      <span>\r\n        <FontAwesomeIcon icon={faDizzy} />\r\n      </span>\r\n      <h1>Uuppsss... something went wrong</h1>\r\n      <h2>Please try to login again</h2>\r\n      <span>Error code: {props.location.state.code}</span>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  grid-area: 2/1/-1/-1;\r\n\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n\r\n  h1,\r\n  h2,\r\n  span {\r\n    flex-basis: 100%;\r\n\r\n    text-align: center;\r\n  }\r\n\r\n  span:first-child {\r\n    font-size: 10rem;\r\n\r\n    color: ${({ theme }) => theme.colors.gray};\r\n  }\r\n`;\r\n\r\nexport default Error;\r\n","import styled from \"styled-components\";\r\n\r\nconst MainContainer = ({ children }) => {\r\n  return <Wrapper>{children}</Wrapper>;\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n\r\n  display: grid;\r\n  grid-template-columns: repeat(12, 1fr);\r\n  grid-template-rows: repeat(12, 1fr);\r\n`;\r\n\r\nexport default MainContainer;\r\n","import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n/**\r\n * Functional react component - renders button component\r\n * @param {Object} props - react props\r\n * @returns {JSX.Element}\r\n * @example\r\n * <Btn\r\n *  onClick={() => console.log(\"clicked\")\r\n *  danger={true} path=\"/index.html\"}\r\n * >\r\n *  <span>description</span>\r\n * </Btn>\r\n *\r\n */\r\nconst Button = ({\r\n  path,\r\n  onClick,\r\n  children,\r\n  isActive = false,\r\n  disabled = false,\r\n  danger = false,\r\n}) => {\r\n  const handleOnClick = e => {\r\n    if (!path) {\r\n      e.preventDefault();\r\n    }\r\n\r\n    if (!disabled && typeof onClick === \"function\") onClick();\r\n  };\r\n\r\n  return (\r\n    <Btn\r\n      to={path}\r\n      as={!path && \"button\"}\r\n      onClick={handleOnClick}\r\n      isActive={isActive}\r\n      disabled={disabled}\r\n      danger={danger}\r\n    >\r\n      {children}\r\n    </Btn>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  /**\r\n   * adding a path will cause the component to render <a> tag instead of <button>\r\n   */\r\n  path: PropTypes.string,\r\n\r\n  /**\r\n   * function which will be triggred on click\r\n   */\r\n  onClick: PropTypes.func,\r\n\r\n  /**\r\n   * if set to true hover effect will be displayed permanently\r\n   */\r\n  isActive: PropTypes.bool,\r\n\r\n  /**\r\n   * if set to true component will not display hover effect, onClick function will not be triggered\r\n   */\r\n  disabled: PropTypes.bool,\r\n\r\n  /**\r\n   * Changes button theme to red\r\n   */\r\n  danger: PropTypes.bool,\r\n};\r\n\r\nconst Btn = styled(Link)`\r\n  position: relative;\r\n  margin: 0 1rem;\r\n\r\n  display: flex;\r\n\r\n  box-shadow: inset 0 0 0px 2px\r\n    ${({ theme, danger }) =>\r\n      danger ? theme.colors.red[\"500\"] : theme.colors.off};\r\n  border-radius: 5px;\r\n\r\n  font-size: 1.5rem;\r\n\r\n  background-color: ${({ danger, theme }) =>\r\n    danger ? theme.colors.red[200] : \"white\"};\r\n  filter: grayscale(${({ disabled }) => (disabled ? \"1\" : \"0\")});\r\n  color: ${({ danger }) => (danger ? \"white\" : \"gray\")};\r\n\r\n  padding: 1rem;\r\n  transition: 300ms;\r\n\r\n  span {\r\n    z-index: 999;\r\n    margin: 0 0.1rem;\r\n  }\r\n\r\n  &:focus&:before {\r\n    clip-path: circle(100% at left bottom);\r\n  }\r\n\r\n  &:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    border-radius: 5px;\r\n\r\n    background-color: ${({ theme, danger }) =>\r\n      danger ? theme.colors.red[\"500\"] : theme.colors.off};\r\n    clip-path: ${({ isActive }) =>\r\n      isActive ? \"circle(100% at left bottom)\" : \"circle(0 at left bottom)\"};\r\n    transition: 0.4s linear;\r\n  }\r\n\r\n  &:hover&:before {\r\n    clip-path: circle(\r\n      ${({ disabled }) => (disabled ? \"0\" : \"100%\")} at left bottom\r\n    );\r\n  }\r\n`;\r\n\r\nexport default Button;\r\n","import Button from \"components/uiElements/Button\";\r\n\r\nconst MenuListItem = ({ text, path, icon, toggleMenuVisibility }) => {\r\n  if (path) {\r\n    return (\r\n      <li>\r\n        <Button path={path}>\r\n          <span>{icon}</span> <span>{text}</span>\r\n        </Button>\r\n      </li>\r\n    );\r\n  } else {\r\n    return (\r\n      <li>\r\n        <Button onClick={toggleMenuVisibility}>\r\n          <span>{icon}</span> <span>{text}</span>\r\n        </Button>\r\n      </li>\r\n    );\r\n  }\r\n};\r\n\r\nexport default MenuListItem;\r\n","import styled from \"styled-components\";\r\n\r\nimport MenuListItem from \"./MenuListItem\";\r\n\r\n/**\r\n * Renders nav links\r\n * @param {Object} props - react props\r\n * @returns {JSX.Element}\r\n */\r\nconst MenuList = ({ listItems, toggleMenuVisibility }) => {\r\n  /**\r\n   * Renders link on the screen\r\n   * @param {Object[]} elements - list elements\r\n   * @param {string} elements[].text - text rendered inside list item\r\n   * @param {string} elements[].path - link path\r\n   * @param {JSX.Element} elements[].icon - icon wrapped in react component\r\n   * @returns {Object[]}\r\n   */\r\n  const renderListItems = elements => {\r\n    const listElements = [];\r\n\r\n    for (let i = 0; i < elements.length; i++) {\r\n      const { text, path, icon } = elements[i];\r\n\r\n      listElements.push(\r\n        <MenuListItem\r\n          text={text}\r\n          path={path}\r\n          key={i}\r\n          icon={icon}\r\n          toggleMenuVisibility={toggleMenuVisibility}\r\n        />\r\n      );\r\n    }\r\n\r\n    return listElements;\r\n  };\r\n\r\n  return <Wrapper>{renderListItems(listItems)}</Wrapper>;\r\n};\r\n\r\nconst Wrapper = styled.ul`\r\n  display: flex;\r\n\r\n  list-style: none;\r\n`;\r\n\r\nexport default MenuList;\r\n","import styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n/**\r\n * Renders input in the label\r\n * @param {Object} props - react props\r\n * @returns {JSX.Element}\r\n */\r\nconst Input = ({\r\n  type = \"text\",\r\n  desc,\r\n  onChange,\r\n  size = \"medium\",\r\n  value = \"\",\r\n}) => {\r\n  const handleInputChange = e => {\r\n    onChange(e.target.value);\r\n  };\r\n\r\n  let inputSize;\r\n\r\n  if (size === \"small\") {\r\n    inputSize = \"50%\";\r\n  } else if (size === \"medium\") {\r\n    inputSize = \"75%\";\r\n  } else if (size === \"large\") {\r\n    inputSize = \"90%\";\r\n  }\r\n\r\n  const textAreaStyle = {\r\n    resize: \"none\",\r\n    height: \"200px\",\r\n    flexBasis: inputSize,\r\n  };\r\n\r\n  const InputType =\r\n    type === \"textarea\" ? (\r\n      <InputEl\r\n        as={\"textarea\"}\r\n        onChange={handleInputChange}\r\n        style={textAreaStyle}\r\n        value={value}\r\n      />\r\n    ) : (\r\n      <InputEl\r\n        type={type}\r\n        onChange={handleInputChange}\r\n        style={{ flexBasis: inputSize }}\r\n        value={value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <Label>\r\n      <h3>{desc}</h3>\r\n      {InputType}\r\n    </Label>\r\n  );\r\n};\r\n\r\nInput.propTypes = {\r\n  /**\r\n   * input type - default is text\r\n   */\r\n  type: PropTypes.string,\r\n  /**\r\n   * Input description\r\n   */\r\n  desc: PropTypes.string,\r\n  /**\r\n   * Function which is triggered on every state change\r\n   */\r\n  onChange: PropTypes.func.isRequired,\r\n\r\n  /**\r\n   * Sets input size\r\n   */\r\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\r\n\r\n  /**\r\n   * value - for controlled inputs\r\n   */\r\n  value: PropTypes.string,\r\n};\r\n\r\nconst Label = styled.label`\r\n  width: 100%;\r\n\r\n  margin-bottom: 1rem;\r\n\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  h3,\r\n  span {\r\n    flex-basis: 100%;\r\n\r\n    text-align: center;\r\n  }\r\n\r\n  h3 {\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst InputEl = styled.input`\r\n  margin-top: 0.5rem;\r\n\r\n  font-size: 1.5rem;\r\n\r\n  border: none;\r\n  border-radius: 5px;\r\n  outline: none;\r\n  box-shadow: 0 0 0 2px ${({ theme }) => theme.colors.gray};\r\n\r\n  background-color: white;\r\n\r\n  padding: 0.25rem;\r\n\r\n  &:focus {\r\n    box-shadow: 0 0 0 2px ${({ theme }) => theme.colors.off};\r\n  }\r\n`;\r\n\r\nexport default Input;\r\n","import gsap from \"gsap\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { useEffect, useRef } from \"react\";\r\n\r\n/**\r\n * Functional Component - renders loading spinner on the screen\r\n * @param {Object} props - React props\r\n * @returns {JSX.Element}\r\n */\r\nconst Spinner = ({ text, overlay = false }) => {\r\n  const containerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const spinner = containerRef.current.children;\r\n\r\n    gsap.to(spinner[0], {\r\n      rotation: 360,\r\n      repeat: -1,\r\n      duration: 2,\r\n      ease: \"none\",\r\n    });\r\n    gsap.to(spinner[1], {\r\n      rotation: -360,\r\n      repeat: -1,\r\n      duration: 1.25,\r\n      ease: \"none\",\r\n    });\r\n    gsap.to(spinner[2], {\r\n      rotation: 360,\r\n      repeat: -1,\r\n      duration: 1.5,\r\n      ease: \"none\",\r\n    });\r\n    gsap.to(spinner[3], {\r\n      rotation: -360,\r\n      repeat: -1,\r\n      duration: 1.75,\r\n      ease: \"none\",\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Container ref={containerRef}>\r\n        <LoadingSpinner d={50} color={\"rgb(0, 222, 205)\"}></LoadingSpinner>\r\n        <LoadingSpinner d={40} color={\"rgb(51, 198, 212)\"}></LoadingSpinner>\r\n        <LoadingSpinner d={30} color={\"rgb(59, 161, 212)\"}></LoadingSpinner>\r\n        <LoadingSpinner d={20} color={\"rgb(49, 83, 140)\"}></LoadingSpinner>\r\n        {text && <Description>{text}</Description>}\r\n      </Container>\r\n\r\n      {overlay && <Overlay />}\r\n    </>\r\n  );\r\n};\r\n\r\nSpinner.propTypes = {\r\n  /**\r\n   * Text which is display below the spinner\r\n   */\r\n  text: PropTypes.string,\r\n\r\n  /**\r\n   * displays an overlay to block user interaction with the page\r\n   */\r\n  overlay: PropTypes.bool,\r\n};\r\n\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  z-index: 99999;\r\n  top: 50%;\r\n  left: 50%;\r\n\r\n  transform: translate(-50%, -50%);\r\n  width: 10rem;\r\n  height: 10rem;\r\n\r\n  border-radius: 10px;\r\n  box-shadow: inset 0 0 4px 0 ${({ theme }) => theme.colors.off};\r\n\r\n  background-color: ${({ theme }) => theme.colors.main};\r\n  overflow: hidden;\r\n`;\r\n\r\nconst LoadingSpinner = styled.div`\r\n  position: absolute;\r\n  top: ${({ d }) => (100 - d) / 2}%;\r\n  left: ${({ d }) => (100 - d) / 2}%;\r\n\r\n  width: ${({ d }) => d}%;\r\n  height: ${({ d }) => d}%;\r\n\r\n  border-radius: 50%;\r\n  background-color: ${({ color }) => color};\r\n  box-shadow: 0 0 4px 0px rgb(49, 83, 140);\r\n  overflow: hidden;\r\n\r\n  &:after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n\r\n    width: 100%;\r\n    height: 50%;\r\n\r\n    background-color: white;\r\n  }\r\n\r\n  &:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 5%;\r\n    left: 5%;\r\n\r\n    width: 90%;\r\n    height: 90%;\r\n\r\n    border-radius: 50%;\r\n\r\n    background-color: white;\r\n  }\r\n`;\r\n\r\nconst Overlay = styled.div`\r\n  z-index: 9999;\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n\r\n  background-color: rgba(125, 125, 125, 0.7);\r\n`;\r\n\r\nconst Description = styled.p`\r\n  position: absolute;\r\n  bottom: 0.25rem;\r\n  left: 0;\r\n  right: 0;\r\n\r\n  text-align: center;\r\n  font-family: ${({ theme }) => theme.fonts.main};\r\n  color: gray;\r\n`;\r\n\r\nexport default Spinner;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttpRequest = () => {\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n\r\n      try {\r\n        const response = await fetch(url, {\r\n          method: method,\r\n          body: body,\r\n          headers,\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        if (!response.ok) {\r\n          setError(responseData.message);\r\n          throw new Error(responseData.message);\r\n        }\r\n\r\n        setIsLoading(false);\r\n        return { ...responseData, statusCode: response.status };\r\n      } catch (err) {\r\n        setIsLoading(false);\r\n        setError(err.message);\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => {\r\n    setError(null);\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","/**\r\n * Recovers an item from sessionStorage. Undefined is set if not item was found.\r\n * @param {String} key - an item key\r\n * @return {string | undefined}\r\n */\r\nexport const getSessionItem = key => {\r\n  const sessionItem = sessionStorage.getItem(key);\r\n\r\n  return sessionItem || undefined;\r\n};\r\n\r\n/**\r\n * sets an item in the sesstionStorage - if an item is overwritten, returns removed item\r\n * @param {String} key - item key\r\n * @param {String} value - item id\r\n * @return {undefined || string}\r\n */\r\nexport const setSessionItem = (key, value) => {\r\n  const prev = sessionStorage.getItem(key);\r\n  sessionStorage.setItem(key, value);\r\n\r\n  return prev || undefined;\r\n};\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\r\nimport styled from \"styled-components\";\r\nimport { useState, useContext, useEffect } from \"react\";\r\n\r\nimport AuthContext from \"context/Auth\";\r\nimport Button from \"components/uiElements/Button\";\r\nimport Input from \"components/uiElements/Input\";\r\nimport Spinner from \"components/uiElements/Spinner\";\r\nimport { useHttpRequest } from \"hooks/useHttpRequest\";\r\nimport { setSessionItem } from \"utils/handleSessionStorage\";\r\n\r\nconst LoginForm = () => {\r\n  const [isInSignUpMode, setIsInSignUpMode] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const { error, isLoading, sendRequest, clearError } = useHttpRequest();\r\n  const { setIsLoggedIn, setUserID } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    clearError();\r\n  }, [name, email, password, clearError]);\r\n\r\n  const handleSwitchMode = () => {\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n\r\n    clearError();\r\n\r\n    setIsInSignUpMode(prev => !prev);\r\n  };\r\n\r\n  const handleFormSubmit = async () => {\r\n    try {\r\n      const responseData = await sendRequest(\r\n        `http://localhost:3001/api/users/${\r\n          isInSignUpMode ? \"signup\" : \"login\"\r\n        }`,\r\n        \"POST\",\r\n        JSON.stringify({\r\n          name: isInSignUpMode ? name : null,\r\n          email: email,\r\n          password: password,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n\r\n      if (\r\n        responseData?.statusCode === 201 ||\r\n        (!isInSignUpMode && responseData?.statusCode === 200)\r\n      ) {\r\n        setIsLoggedIn(true);\r\n        setUserID(responseData.userID);\r\n        setSessionItem(\"token\", responseData.token);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const buttonContent = isInSignUpMode\r\n    ? \"Switch to log in\"\r\n    : \"Switch to signup\";\r\n\r\n  const titleContent = isInSignUpMode ? \"Sign up\" : \"Log in\";\r\n  let isButtonDisabled = !password || !email;\r\n\r\n  if (isInSignUpMode) {\r\n    isButtonDisabled = !password || !email || !name;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <FormTitle>{titleContent}</FormTitle>\r\n\r\n      {isLoading && <Spinner text=\"Please wait\" />}\r\n\r\n      <Form>\r\n        {error && <FormError>{error}</FormError>}\r\n        {isInSignUpMode && (\r\n          <Input type=\"text\" desc=\"Name\" onChange={setName} value={name} />\r\n        )}\r\n\r\n        <Input type=\"email\" desc=\"Email\" onChange={setEmail} value={email} />\r\n\r\n        <Input\r\n          type=\"password\"\r\n          desc=\"Password\"\r\n          onChange={setPassword}\r\n          value={password}\r\n        />\r\n\r\n        <Button\r\n          as=\"button\"\r\n          onClick={handleFormSubmit}\r\n          disabled={isButtonDisabled}\r\n        >\r\n          <span>Submit</span>\r\n          <span>\r\n            <FontAwesomeIcon icon={faPaperPlane} />\r\n          </span>\r\n        </Button>\r\n      </Form>\r\n\r\n      <Button as=\"button\" onClick={handleSwitchMode}>\r\n        <span>{buttonContent}</span>\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst FormError = styled.div`\r\n  margin-bottom: 1rem;\r\n\r\n  border-radius: 5px;\r\n\r\n  color: ${({ theme }) => theme.colors.red[\"500\"]};\r\n  background-color: rgb(237, 204, 197);\r\n\r\n  padding: 0.5rem;\r\n`;\r\n\r\nconst FormTitle = styled.h2`\r\n  z-index: 999;\r\n  flex-basis: 100%;\r\n\r\n  text-align: center;\r\n  color: white;\r\n`;\r\n\r\nexport default LoginForm;\r\n","import { CSSTransition } from \"react-transition-group\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useEffect, useRef } from \"react\";\r\n\r\n/**\r\n * Functional react component - renders side bar on the screen\r\n * @param {Object} props - react props\r\n * @returns {JSX.Element}\r\n */\r\nconst SideBar = ({ children, isOpen, setIsOpen, size = \"30vw\" }) => {\r\n  const backdropRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const backdrop = backdropRef.current;\r\n    const handleBackdropClick = () => {\r\n      setIsOpen();\r\n    };\r\n\r\n    backdrop.addEventListener(\"click\", handleBackdropClick);\r\n\r\n    return () => {\r\n      backdrop.removeEventListener(\"click\", handleBackdropClick);\r\n    };\r\n  }, [setIsOpen]);\r\n\r\n  let timeout = size.match(/\\d/g).join(\"\") * 1;\r\n\r\n  if (timeout < 100) timeout = timeout * 10;\r\n  else if (timeout > 1000) timeout = 1000;\r\n\r\n  return (\r\n    <>\r\n      <Backdrop ref={backdropRef} isOpen={isOpen}></Backdrop>\r\n      <CSSTransition\r\n        in={isOpen}\r\n        classNames={\"bar\"}\r\n        timeout={timeout}\r\n        unmountOnExit\r\n      >\r\n        <Bar size={size}>\r\n          {setIsOpen && (\r\n            <CloseBtn onClick={setIsOpen}>\r\n              <FontAwesomeIcon icon={faTimes} />\r\n            </CloseBtn>\r\n          )}\r\n\r\n          {children}\r\n        </Bar>\r\n      </CSSTransition>\r\n    </>\r\n  );\r\n};\r\n\r\nSideBar.propTypes = {\r\n  /**\r\n   * Determinates if component is visible\r\n   */\r\n  isOpen: PropTypes.bool.isRequired,\r\n\r\n  /**\r\n   * Sets components width, all units are accepted\r\n   */\r\n  size: PropTypes.string,\r\n\r\n  /**\r\n   * function which triggers isOpen state change\r\n   */\r\n  setIsOpen: PropTypes.func.isRequired,\r\n};\r\n\r\nconst Bar = styled.div`\r\n  position: absolute;\r\n  z-index: 99;\r\n  top: calc(100vh / 12);\r\n  right: 0;\r\n  bottom: 0;\r\n\r\n  width: ${({ size }) => size};\r\n  min-width: 200px;\r\n\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  background: ${({ theme }) => theme.colors.main};\r\n\r\n  transition: 300ms;\r\n\r\n  &:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    background-color: ${({ theme, dark }) =>\r\n      dark ? \"rgb(150, 150, 150)\" : theme.colors.blue};\r\n    clip-path: circle(200px at right top);\r\n  }\r\n\r\n  &.bar-enter {\r\n    transform: translateX(${({ size }) => size});\r\n  }\r\n\r\n  &.bar-enter-active {\r\n    transform: translateX(0);\r\n  }\r\n\r\n  &.bar-exit {\r\n    transform: translateX(0);\r\n  }\r\n\r\n  &.bar-exit-active {\r\n    transform: translateX(${({ size }) => size});\r\n  }\r\n`;\r\n\r\nconst CloseBtn = styled.button`\r\n  position: absolute;\r\n  top: 1rem;\r\n  right: 1rem;\r\n\r\n  font-size: 1.5rem;\r\n\r\n  color: white;\r\n  transition: transform 300ms;\r\n\r\n  &:hover {\r\n    transform: scale(1.25);\r\n    color: ${({ theme }) => theme.colors.off};\r\n  }\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  display: ${({ isOpen }) => (isOpen ? \"block\" : \"none\")};\r\n`;\r\n\r\nexport default SideBar;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPowerOff } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faClipboard } from \"@fortawesome/free-solid-svg-icons\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { useContext, useState } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n\r\nimport AuthContext from \"context/Auth\";\r\nimport MenuList from \"./MenuList\";\r\nimport LoginForm from \"components/uiElements/LoginForm\";\r\nimport SideBar from \"components/uiElements/SideBar\";\r\n\r\n/**\r\n * Renders navigation bar\r\n * @param {Object} props - react props\r\n * @returns {JSX.Element}\r\n */\r\nconst Menu = ({ title }) => {\r\n  const [isFormOpen, setIsFormOpen] = useState(false);\r\n  const { isLoggedIn, setIsLoggedIn } = useContext(AuthContext);\r\n  const path = useParams();\r\n  const history = useHistory();\r\n\r\n  const menuLinks = [\r\n    {\r\n      text: \"Dashboard\",\r\n      path: \"/userPanel\",\r\n      icon: <FontAwesomeIcon icon={faClipboard} />,\r\n      isActive: path === \"/userPanel\",\r\n    },\r\n    {\r\n      text: \"Home\",\r\n      path: \"/\",\r\n      icon: <FontAwesomeIcon icon={faHome} />,\r\n    },\r\n    {\r\n      text: isLoggedIn ? \"Logout\" : \"Login\",\r\n      icon: <FontAwesomeIcon icon={faPowerOff} />,\r\n    },\r\n  ];\r\n\r\n  const sideMenuHandler = direction => {\r\n    if (!isLoggedIn) {\r\n      if (typeof direction === \"boolean\") {\r\n        setIsFormOpen(direction);\r\n      } else {\r\n        setIsFormOpen(prev => !prev);\r\n      }\r\n    } else {\r\n      history.push(\"/\");\r\n      setIsLoggedIn(false);\r\n    }\r\n  };\r\n\r\n  const links = isLoggedIn ? menuLinks : menuLinks.slice(1);\r\n\r\n  return (\r\n    <>\r\n      <MenuBar>\r\n        {title && <MenuTitle>{title}</MenuTitle>}\r\n        <MenuList listItems={links} toggleMenuVisibility={sideMenuHandler} />\r\n      </MenuBar>\r\n\r\n      {!isLoggedIn && (\r\n        <SideBar isOpen={isFormOpen} setIsOpen={() => setIsFormOpen(false)}>\r\n          <LoginForm />\r\n        </SideBar>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nMenu.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nconst MenuTitle = styled.h1`\r\n  margin-right: auto;\r\n  margin-left: 1rem;\r\n\r\n  text-align: left;\r\n  color: white;\r\n`;\r\n\r\nconst MenuBar = styled.div`\r\n  z-index: 9999;\r\n  position: relative;\r\n  grid-area: 1/1/2/-1;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n\r\n  background-color: ${({ theme }) => theme.colors.main};\r\n\r\n  padding: 0.5rem 0;\r\n\r\n  &:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: ${({ theme, dark }) =>\r\n      dark ? \"rgb(150, 150, 150)\" : theme.colors.blue};\r\n    clip-path: circle(200px at right bottom);\r\n  }\r\n`;\r\n\r\nexport default Menu;\r\n","import styled from \"styled-components\";\r\n\r\nconst PageContainer = ({ children }) => {\r\n  return <Wrapper>{children}</Wrapper>;\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  grid-area: 2/1/-1/-1;\r\n\r\n  display: grid;\r\n\r\n  grid-template-columns: repeat(12, 1fr);\r\n  grid-template-rows: repeat(12, 1fr);\r\n\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n`;\r\n\r\nexport default PageContainer;\r\n","import styled from \"styled-components\";\r\n\r\nconst Footer = () => {\r\n  return <Wrapper>Copyright&#169; 2021 Wojciech Rygorowicz</Wrapper>;\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  grid-area: 12/1/-1/-1;\r\n\r\n  display: flex;\r\n  align-items: flex-end;\r\n\r\n  color: ${({ theme }) => theme.colors.gray};\r\n`;\r\n\r\nexport default Footer;\r\n","import styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPenFancy } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faHistory } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport PageContainer from \"components/uiElements/PageContainer\";\r\nimport Footer from \"components/uiElements/Footer\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <PageContainer>\r\n      <NoteCard area={\"2/2/5/4\"} order={1} side=\"left\">\r\n        <h3>Create</h3>\r\n        <span>\r\n          <FontAwesomeIcon icon={faPenFancy} />\r\n        </span>\r\n        <p>Register or log in and create your first note within a minute!</p>\r\n      </NoteCard>\r\n      <NoteCard area={\"4/3/7/6\"} order={0} dark></NoteCard>\r\n      <NoteCard area={\"8/2/11/4\"} order={1} dark>\r\n        <h3>Upadate</h3>\r\n        <span>\r\n          <FontAwesomeIcon icon={faEdit} />\r\n        </span>\r\n        <p>Edit your notes any time You want!</p>\r\n      </NoteCard>\r\n      <NoteCard area={\"6/5/9/8\"} order={1} side=\"left\">\r\n        <h3>Manage</h3>\r\n        <span>\r\n          <FontAwesomeIcon icon={faHistory} />\r\n        </span>\r\n        <p>Mark as completed, delete, browse deleted, and much more!</p>\r\n      </NoteCard>\r\n\r\n      <Footer />\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nconst NoteCard = styled.section`\r\n  position: relative;\r\n  z-index: ${({ order }) => order};\r\n  grid-area: ${({ area }) => area};\r\n\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n\r\n  border: 2px solid ${({ theme }) => theme.colors.gray};\r\n  border-radius: 10px;\r\n\r\n  background: ${({ theme, dark }) =>\r\n    dark ? theme.colors.gray : theme.colors.main};\r\n\r\n  padding: 1rem;\r\n\r\n  h3,\r\n  p,\r\n  span {\r\n    z-index: 999;\r\n    font-size: 1.5rem;\r\n\r\n    color: white;\r\n  }\r\n\r\n  h3 {\r\n    flex-basis: 100%;\r\n    height: 2rem;\r\n\r\n    border-bottom: 1px solid white;\r\n  }\r\n\r\n  span {\r\n    position: absolute;\r\n    top: 0.5rem;\r\n    right: 0.5rem;\r\n  }\r\n\r\n  &:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    border-radius: 10px;\r\n\r\n    background-color: ${({ theme, dark }) =>\r\n      dark ? \"rgb(150, 150, 150)\" : theme.colors.blue};\r\n    clip-path: circle(\r\n      ${({ side }) =>\r\n        side === \"left\" ? \"90% at left bottom\" : \"75% at right bottom\"}\r\n    );\r\n  }\r\n`;\r\n\r\nexport default Home;\r\n","import styled from \"styled-components\";\r\n\r\nimport Button from \"components/uiElements/Button\";\r\nimport Input from \"components/uiElements/Input\";\r\nimport SideBar from \"components/uiElements/SideBar\";\r\n\r\nconst AddNote = ({\r\n  createMode,\r\n  isOpen,\r\n  setIsOpen,\r\n  onBodyChange,\r\n  onTitleChange,\r\n  onFormSubmit,\r\n  value = { body: \"\", title: \"\" },\r\n}) => {\r\n  const titleContent = createMode ? \"Add note\" : \"Edit note\";\r\n  return (\r\n    <SideBar isOpen={isOpen} setIsOpen={setIsOpen}>\r\n      <Form>\r\n        <FormTitle>{titleContent}</FormTitle>\r\n        <Input\r\n          type=\"text\"\r\n          desc=\"Title\"\r\n          onChange={onTitleChange}\r\n          size=\"medium\"\r\n          value={value.title}\r\n        />\r\n        <Input\r\n          type=\"textarea\"\r\n          desc=\"Description\"\r\n          onChange={onBodyChange}\r\n          size=\"medium\"\r\n          value={value.body}\r\n        />\r\n\r\n        <Button onClick={onFormSubmit} disabled={!value.body || !value.title}>\r\n          <span>{createMode ? \"Create \" : \"Update \"}note</span>\r\n        </Button>\r\n      </Form>\r\n    </SideBar>\r\n  );\r\n};\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst FormTitle = styled.h3`\r\n  margin-bottom: 5rem;\r\n\r\n  font-size: 2rem;\r\n\r\n  color: white;\r\n`;\r\n\r\nexport default AddNote;\r\n","import styled from \"styled-components\";\r\n\r\nconst HistoryItem = ({ title, body, completed }) => {\r\n  return (\r\n    <Wrapper>\r\n      <NoteTitle>{title}</NoteTitle>\r\n      <NoteDate>Completed: {completed}</NoteDate>\r\n      <NoteBody>{body}</NoteBody>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  z-index: 999;\r\n  margin: 0.5rem 0;\r\n  flex-basis: 75%;\r\n\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  border-radius: 5px;\r\n\r\n  background-color: white;\r\n  color: ${({ theme }) => theme.colors.gray};\r\n\r\n  padding: 0.25rem;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst NoteTitle = styled.h5`\r\n  flex-basis: 100%;\r\n\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.gray};\r\n\r\n  text-align: left;\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst NoteDate = styled.span`\r\n  flex-basis: 100%;\r\n\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.gray};\r\n\r\n  text-align: left;\r\n`;\r\n\r\nconst NoteBody = styled.p`\r\n  flex-basis: 100%;\r\n`;\r\n\r\nexport default HistoryItem;\r\n","import styled from \"styled-components\";\r\n\r\nimport AuthContext from \"context/Auth\";\r\nimport HistoryItem from \"./HistoryItem\";\r\nimport SideBar from \"components/uiElements/SideBar\";\r\nimport Spinner from \"components/uiElements/Spinner\";\r\nimport { useHttpRequest } from \"hooks/useHttpRequest\";\r\nimport { useEffect, useContext, useState } from \"react\";\r\nimport { getSessionItem } from \"utils/handleSessionStorage\";\r\n\r\nconst NotesHistory = ({ isOpen, setIsOpen }) => {\r\n  const [historyNotes, setHistoryNotes] = useState([]);\r\n  const { sendRequest, error, isLoading } = useHttpRequest();\r\n  const { userID } = useContext(AuthContext);\r\n\r\n  // !fetch works on the first render only\r\n  useEffect(() => {\r\n    const fetchHistory = async () => {\r\n      const token = getSessionItem(\"token\");\r\n      const responseData = await sendRequest(\r\n        `${process.env.REACT_APP_BASE_URL}/notes/history/user/${userID}`,\r\n        \"GET\",\r\n        null,\r\n        { Authorization: `Bearer ${token}` }\r\n      );\r\n\r\n      if (responseData) {\r\n        setHistoryNotes(responseData.notes);\r\n      }\r\n    };\r\n    fetchHistory();\r\n  }, [sendRequest, userID]);\r\n\r\n  const renderHistoryNotes = () => {\r\n    const notes = [];\r\n\r\n    if (!historyNotes.length) {\r\n      return <h3>No history found</h3>;\r\n    }\r\n\r\n    historyNotes.map(note => {\r\n      const { title, body, date } = note;\r\n      const completed =\r\n        date.split(\"T\")[0] + \" \" + date.split(\"T\")[1].match(/\\d*:\\d*:\\d*/);\r\n      return notes.push(\r\n        <HistoryItem title={title} body={body} completed={completed} />\r\n      );\r\n    });\r\n    return notes;\r\n  };\r\n\r\n  return (\r\n    <SideBar size={\"50vw\"} isOpen={isOpen} setIsOpen={setIsOpen}>\r\n      <Title>Removed notes</Title>\r\n\r\n      {isLoading && <Spinner text=\"Loading...\" />}\r\n      <NotesWrapper>{!isLoading && renderHistoryNotes()}</NotesWrapper>\r\n    </SideBar>\r\n  );\r\n};\r\n\r\nconst Title = styled.h2`\r\n  color: white;\r\n`;\r\n\r\nconst NotesWrapper = styled.div`\r\n  z-index: 999;\r\n  width: 90%;\r\n  height: 90%;\r\n\r\n  overflow-y: auto;\r\n\r\n  padding: 1rem;\r\n`;\r\n\r\nexport default NotesHistory;\r\n","import styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n/**\r\n * Functional Component - Renders round button on the screen\r\n * @param {Object} props - React props\r\n * @returns {JSX.Element}\r\n */\r\nconst RoundButton = ({\r\n  children,\r\n  text = \"\",\r\n  onClick = () => {},\r\n  isActive = false,\r\n}) => {\r\n  return (\r\n    <RoundBtn text={text} onClick={onClick} isActive={isActive}>\r\n      {children}\r\n    </RoundBtn>\r\n  );\r\n};\r\n\r\nRoundButton.propTypes = {\r\n  /**\r\n   * Button description\r\n   */\r\n  text: PropTypes.string.isRequired,\r\n\r\n  /**\r\n   * Function which is triggered on button click\r\n   */\r\n  onClick: PropTypes.func.isRequired,\r\n\r\n  /**\r\n   * if set to true component will keep hover effect permanently\r\n   */\r\n  isActive: PropTypes.bool,\r\n};\r\n\r\nconst RoundBtn = styled.button`\r\n  width: 7rem;\r\n  height: 7rem;\r\n\r\n  border-radius: 50%;\r\n  box-shadow: ${({ isActive, theme }) =>\r\n    isActive\r\n      ? `0 0 0 6px ${theme.colors.off},\r\n      0 0 0 8px ${theme.colors.main}`\r\n      : `0 0 0 2px white, 0 0 0 4px ${theme.colors.main}`};\r\n\r\n  font-size: 4rem;\r\n\r\n  background-color: ${({ theme }) => theme.colors.blue};\r\n  color: white;\r\n\r\n  transition: 300ms linear;\r\n\r\n  &:after {\r\n    content: \"${({ text }) => text}\";\r\n    position: absolute;\r\n\r\n    top: 2rem;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 25%;\r\n\r\n    transform: translateX(${({ isActive }) => (isActive ? \"0\" : \"-25%\")});\r\n    opacity: ${({ isActive }) => (isActive ? \"1\" : \"0\")};\r\n    visibility: ${({ isActive }) => (isActive ? \"visible\" : \"hidden\")};\r\n\r\n    font-size: 2rem;\r\n    color: ${({ theme }) => theme.colors.gray};\r\n    transition: all 300ms;\r\n    transition-property: opacity, transform, visibility;\r\n  }\r\n\r\n  &:focus,\r\n  &:hover {\r\n    box-shadow: 0 0 0 6px ${({ theme }) => theme.colors.off},\r\n      0 0 0 8px ${({ theme }) => theme.colors.main};\r\n\r\n    &:after {\r\n      transform: translateX(0);\r\n      opacity: 1;\r\n      visibility: visible;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default RoundButton;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Note = ({ title, body, createdAt, _id, onNoteEdit, onNoteRemove }) => {\r\n  const dateString = createdAt.split(\"T\")[0];\r\n  const timeString = createdAt.match(/\\d*:\\d*:\\d*/g);\r\n\r\n  const handleNoteRemove = () => {\r\n    onNoteRemove(_id);\r\n  };\r\n\r\n  const handleNoteEdit = () => {\r\n    const noteData = {\r\n      title,\r\n      body,\r\n      _id,\r\n    };\r\n\r\n    onNoteEdit(noteData);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <NoteInfo>\r\n        <NoteTitle>{title}</NoteTitle>\r\n\r\n        <NoteTime>\r\n          <span>{dateString}</span> <span>{timeString}</span>\r\n        </NoteTime>\r\n      </NoteInfo>\r\n\r\n      <p>{body}</p>\r\n      <NoteSettings>\r\n        <Icon onClick={handleNoteRemove} tooltip=\"Remove note\">\r\n          <FontAwesomeIcon icon={faTrashAlt} />\r\n        </Icon>\r\n\r\n        <Icon onClick={handleNoteEdit} tooltip=\"Edit note\">\r\n          <FontAwesomeIcon icon={faEdit} />\r\n        </Icon>\r\n      </NoteSettings>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 1rem 0;\r\n  flex-basis: 30%;\r\n\r\n  min-height: 100px;\r\n  max-height: 25vh;\r\n\r\n  box-shadow: 0 0 0 2px ${({ theme }) => theme.colors.gray};\r\n  border-radius: 5px;\r\n\r\n  color: ${({ theme }) => theme.colors.text};\r\n\r\n  padding: 0.25rem;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst NoteInfo = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n\r\n  border-radius: 5px;\r\n  background-color: ${({ theme }) => theme.colors.off};\r\n\r\n  padding: 0.25rem;\r\n`;\r\n\r\nconst NoteTime = styled.p`\r\n  flex-basis: 100%;\r\n\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  color: ${({ theme }) => theme.colors.gray};\r\n`;\r\n\r\nconst NoteSettings = styled.div`\r\n  position: relative;\r\n\r\n  flex-basis: 100%;\r\n\r\n  display: flex;\r\n  justify-content: flex-end;\r\n\r\n  color: ${({ theme }) => theme.colors.gray};\r\n`;\r\n\r\nconst Icon = styled.span`\r\n  margin: 0 0.5rem;\r\n  cursor: pointer;\r\n\r\n  &:after {\r\n    content: ${({ tooltip }) => `\"${tooltip}\"`};\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n\r\n    color: ${({ theme }) => theme.colors.gray};\r\n\r\n    visibility: hidden;\r\n  }\r\n\r\n  &:hover&:after {\r\n    visibility: visible;\r\n  }\r\n\r\n  &:hover {\r\n    color: ${({ theme }) => theme.colors.text};\r\n  }\r\n`;\r\n\r\nconst NoteTitle = styled.h6`\r\n  flex-basis: 100%;\r\n  margin-bottom: 0.25rem;\r\n\r\n  text-align: center;\r\n  font-size: 1.1rem;\r\n`;\r\n\r\nexport default Note;\r\n","import styled from \"styled-components\";\r\n\r\nimport Note from \"components/uiElements/Note\";\r\n\r\nconst UserNotes = ({ userNotes, onNoteEdit, onNoteRemove }) => {\r\n  const renderUserNotes = () => {\r\n    return userNotes.map((note, index) => (\r\n      <Note\r\n        key={index}\r\n        {...note}\r\n        onNoteEdit={onNoteEdit}\r\n        onNoteRemove={onNoteRemove}\r\n      />\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <Title>Your notes</Title>\r\n        {renderUserNotes()}\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  grid-area: 1/4/-1/-1;\r\n\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-around;\r\n  align-items: flex-start;\r\n\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  flex-basis: 100%;\r\n  height: 3rem;\r\n\r\n  font-size: 2.25rem;\r\n  text-align: center;\r\n\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.blue};\r\n\r\n  color: ${({ theme }) => theme.colors.gray};\r\n`;\r\n\r\nexport default UserNotes;\r\n","import { faCheck } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\n/**\r\n * Functional React component - renders custom checkbox on the screen\r\n * @returns {JSX.Element}\r\n */\r\nconst Checkbox = ({\r\n  description = \"\",\r\n  onClick = () => {},\r\n  initialValue = false,\r\n}) => {\r\n  const [checkboxState, setCheckboxState] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // update state on active ID change\r\n    setCheckboxState(initialValue);\r\n  }, [initialValue]);\r\n\r\n  /**\r\n   * Toggles checkbox and calls onClick callback provided to the component\r\n   * @return {undefined}\r\n   */\r\n  const toggleCheckbox = () => {\r\n    setCheckboxState(prev => !prev);\r\n    // pass current state to callback\r\n    onClick(!checkboxState);\r\n  };\r\n\r\n  const status = <FontAwesomeIcon icon={checkboxState ? faCheck : faTimes} />;\r\n\r\n  return (\r\n    <Wrapper>\r\n      {description && <Info>{description.toUpperCase()}</Info>}\r\n      <Box isChecked={checkboxState} onClick={toggleCheckbox}>\r\n        {status}\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nCheckbox.propTypes = {\r\n  /**\r\n   * Check box description\r\n   */\r\n  description: PropTypes.string,\r\n\r\n  /**\r\n   * A function which is called on checkbox click\r\n   */\r\n  onClick: PropTypes.func.isRequired,\r\n\r\n  /**\r\n   * Initial value. True - checked.\r\n   */\r\n  initialValue: PropTypes.bool,\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  margin-bottom: 1rem;\r\n  flex-basis: 100%;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Box = styled.div`\r\n  height: 25px;\r\n  width: 25px;\r\n\r\n  margin-left: 5px;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  border: 2px solid ${({ theme }) => theme.colors.off};\r\n  border-radius: 5px;\r\n\r\n  color: ${({ theme }) => theme.colors.off};\r\n\r\n  padding: 0.2rem;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.colors.blue};\r\n  }\r\n`;\r\n\r\nconst Info = styled.p`\r\n  line-height: 25px;\r\n  user-select: none;\r\n  color: white;\r\n`;\r\n\r\nexport default Checkbox;\r\n","import styled from \"styled-components\";\r\nimport { useRef, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n/**\r\n * Functional React component - renders range input on the screen\r\n * @returns {JSX.Element}\r\n */\r\nconst Slider = ({ text = \"\", min = 0, max = 10, onChange, value }) => {\r\n  const [sliderPosition, setSliderPosition] = useState(0);\r\n  const bar = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const { width } = bar.current.getBoundingClientRect();\r\n    let range = max - min;\r\n\r\n    if (min < 0) {\r\n      range = Math.abs(min) + max;\r\n    }\r\n\r\n    const position = Math.floor(width / range) * (value - min);\r\n    const sliderWidth = 30;\r\n\r\n    setSliderPosition(position - sliderWidth / 2);\r\n  }, [value, min, max]);\r\n\r\n  const updateBarInfo = e => {\r\n    const { width, left } = bar.current.getBoundingClientRect();\r\n    const offsetLeft = e.clientX - left;\r\n\r\n    if (offsetLeft < 0) {\r\n      value = min;\r\n    }\r\n\r\n    if (offsetLeft > width) {\r\n      value = max;\r\n    }\r\n\r\n    if (offsetLeft > 0 && offsetLeft < width) {\r\n      let step;\r\n      if (min < 0) {\r\n        step = width / (Math.abs(min) + max);\r\n        value = Math.floor(offsetLeft / step);\r\n      } else {\r\n        step = width / (max - min);\r\n        value = Math.floor(offsetLeft / step) + min;\r\n      }\r\n    }\r\n\r\n    onChange(value);\r\n  };\r\n\r\n  const startDrag = e => {\r\n    e.preventDefault();\r\n    document.addEventListener(\"mousemove\", updateBarInfo);\r\n    document.addEventListener(\"mouseup\", stopDrag);\r\n  };\r\n\r\n  const stopDrag = () => {\r\n    document.removeEventListener(\"mousemove\", updateBarInfo);\r\n    document.removeEventListener(\"mouseup\", stopDrag);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Label>{text.toUpperCase()}</Label>\r\n      <OptionBar ref={bar}>\r\n        <InnerBar width={sliderPosition + 5} />\r\n        <Draggable position={sliderPosition} onMouseDown={startDrag}>\r\n          {value}\r\n        </Draggable>\r\n      </OptionBar>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nSlider.propTypes = {\r\n  /**\r\n   * Optional - slider description\r\n   */\r\n  text: PropTypes.string,\r\n  /**\r\n   * Required - smallest possible input\r\n   */\r\n  min: PropTypes.number.isRequired,\r\n  /**\r\n   * Required - biggest possible input\r\n   */\r\n  max: PropTypes.number.isRequired,\r\n  /**\r\n   * Required - callback which is called on value change\r\n   */\r\n  onChange: PropTypes.func.isRequired,\r\n  /**\r\n   * Required - piece of state which tracks the value\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 1rem 0;\r\n  flex-basis: 100%;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n\r\n  text-align: center;\r\n`;\r\n\r\nconst OptionBar = styled.div`\r\n  position: relative;\r\n  flex-basis: 75%;\r\n  height: 25px;\r\n\r\n  border: 2px solid ${({ theme }) => theme.colors.off};\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst InnerBar = styled.div.attrs(props => ({\r\n  style: { width: props.width },\r\n}))`\r\n  position: absolute;\r\n\r\n  left: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n\r\n  border-radius: 5px;\r\n  background-color: ${({ theme }) => theme.colors.blue};\r\n`;\r\n\r\nconst Draggable = styled.div.attrs(props => ({\r\n  style: {\r\n    left: props.position,\r\n  },\r\n}))`\r\n  position: absolute;\r\n  height: 140%;\r\n  width: 30px;\r\n  transform: translateY(-15%);\r\n\r\n  display: flex;\r\n\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  color: white;\r\n  background-color: ${({ theme }) => theme.colors.blue};\r\n  border: 1px solid white;\r\n  border-radius: 5px;\r\n\r\n  cursor: pointer;\r\n  user-select: none;\r\n`;\r\n\r\nconst Label = styled.p`\r\n  margin-bottom: 1rem;\r\n  flex-basis: 100%;\r\n\r\n  color: white;\r\n  user-select: none;\r\n`;\r\n\r\nexport default Slider;\r\n","import styled from \"styled-components\";\r\n\r\nimport Button from \"components/uiElements/Button\";\r\nimport Checkbox from \"components/uiElements/Checkbox\";\r\nimport SideBar from \"components/uiElements/SideBar\";\r\nimport SettingsContext from \"context/Settings\";\r\nimport { useContext } from \"react\";\r\nimport Slider from \"components/uiElements/Slider\";\r\n\r\nconst Settings = ({ isOpen, setIsOpen, handleClearHistory }) => {\r\n  const { setDarkMode, setFontSize, fontSize } = useContext(SettingsContext);\r\n\r\n  const handleDarkmode = () => {\r\n    setDarkMode(prev => !prev);\r\n  };\r\n\r\n  const handleFontSize = value => {\r\n    setFontSize(value);\r\n  };\r\n\r\n  return (\r\n    <SideBar isOpen={isOpen} setIsOpen={setIsOpen}>\r\n      <Title>Settings</Title>\r\n      <Form>\r\n        <Slider\r\n          text=\"Font size\"\r\n          min={12}\r\n          max={24}\r\n          onChange={handleFontSize}\r\n          value={fontSize}\r\n        />\r\n        <Checkbox description=\"Darkmode\" onClick={handleDarkmode} />\r\n\r\n        <Section>\r\n          Removes all notes from the history. This operation cannot be undone.\r\n          <Button onClick={handleClearHistory} danger={true}>\r\n            <span>Clear history</span>\r\n          </Button>\r\n        </Section>\r\n      </Form>\r\n    </SideBar>\r\n  );\r\n};\r\n\r\nconst Form = styled.form`\r\n  flex-basis: 90%;\r\n  height: 80%;\r\n\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-self: flex-start;\r\n`;\r\n\r\nconst Section = styled.section`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  color: white;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  z-index: 999;\r\n  font-size: 2rem;\r\n  color: white;\r\n`;\r\n\r\nexport default Settings;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faHistory } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faCog } from \"@fortawesome/free-solid-svg-icons\";\r\nimport styled from \"styled-components\";\r\nimport { useState, useContext, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport AuthContext from \"context/Auth\";\r\nimport AddNote from \"components/pages/AddNote\";\r\nimport NotesHistory from \"components/pages/History\";\r\nimport PageContainer from \"components/uiElements/PageContainer\";\r\nimport RoundButton from \"components/uiElements/RoundButton\";\r\nimport UserNotes from \"./UserNotes\";\r\nimport Spinner from \"components/uiElements/Spinner\";\r\nimport Settings from \"components/pages/Settings\";\r\nimport { useHttpRequest } from \"hooks/useHttpRequest\";\r\nimport { getSessionItem } from \"utils/handleSessionStorage\";\r\n\r\nconst UserPanel = () => {\r\n  // TODO refactor to reducer?\r\n  const [userNotes, setUserNotes] = useState([]);\r\n  const [noteTitle, setNoteTitle] = useState(\"\");\r\n  const [noteBody, setNoteBody] = useState(\"\");\r\n  const [createMode, setCreateMode] = useState(true);\r\n  const [editedNoteId, setEditedNoteId] = useState(null);\r\n\r\n  const [isAddNoteOpen, setIsAddNoteOpen] = useState(false);\r\n  const [isHistoryOpen, setIsHistoryOpen] = useState(false);\r\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\r\n\r\n  const { userID, isLoggedIn } = useContext(AuthContext);\r\n  const { error, sendRequest, isLoading } = useHttpRequest();\r\n\r\n  useEffect(() => {\r\n    const fetchNotes = async () => {\r\n      try {\r\n        const token = getSessionItem(\"token\");\r\n\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BASE_URL}/notes/user/${userID}`,\r\n          \"GET\",\r\n          null,\r\n          { Authorization: `Bearer ${token}` }\r\n        );\r\n\r\n        if (!responseData) {\r\n          return setUserNotes([]);\r\n        }\r\n        setUserNotes(responseData.notes);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n\r\n    fetchNotes();\r\n  }, [sendRequest, userID]);\r\n\r\n  const handleNoteAdd = async () => {\r\n    const url = createMode ? \"/notes\" : `/notes/${editedNoteId}`;\r\n    const method = createMode ? \"POST\" : \"PATCH\";\r\n    const body = createMode\r\n      ? { noteTitle, noteBody, userID }\r\n      : { body: noteBody, title: noteTitle };\r\n    const token = getSessionItem(\"token\");\r\n    let responseData;\r\n    try {\r\n      responseData = await sendRequest(\r\n        `${process.env.REACT_APP_BASE_URL}${url}`,\r\n        method,\r\n        JSON.stringify(body),\r\n        { \"Content-Type\": \"application/json\", Authorization: `Bearer ${token}` }\r\n      );\r\n\r\n      //! refactor\r\n      //! add error handling\r\n      if (!responseData) {\r\n        console.log(responseData);\r\n        console.log(error);\r\n        return;\r\n      }\r\n\r\n      setIsAddNoteOpen(false);\r\n    } catch (err) {\r\n      console.log(err);\r\n      return;\r\n    }\r\n\r\n    if (createMode) {\r\n      return setUserNotes(prev => [\r\n        ...prev,\r\n        {\r\n          title: responseData.note.title,\r\n          createdAt: responseData.note.createdAt,\r\n          body: responseData.note.body,\r\n          _id: responseData.note._id,\r\n        },\r\n      ]);\r\n    }\r\n    const newNotes = [...userNotes].map(note => {\r\n      if (note._id === editedNoteId) {\r\n        note.title = noteTitle;\r\n        note.body = noteBody;\r\n      }\r\n\r\n      return note;\r\n    });\r\n    setUserNotes(newNotes);\r\n  };\r\n\r\n  const handleNoteEdit = ({ title, body, _id }) => {\r\n    setCreateMode(false);\r\n    setNoteTitle(title);\r\n    setNoteBody(body);\r\n    setEditedNoteId(_id);\r\n    setIsAddNoteOpen(true);\r\n  };\r\n\r\n  const handleNoteRemove = async id => {\r\n    try {\r\n      const token = getSessionItem(\"token\");\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BASE_URL}/notes/${id}`,\r\n        \"DELETE\",\r\n        null,\r\n        { Authorization: `Bearer ${token}` }\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n      return;\r\n    }\r\n    // TODO: refactor to optimistic remove\r\n    setUserNotes(prev => prev.filter(el => el._id !== id));\r\n  };\r\n\r\n  const handleAddNote = () => {\r\n    setNoteBody(\"\");\r\n    setNoteTitle(\"\");\r\n    setCreateMode(true);\r\n    setIsHistoryOpen(false);\r\n    setIsSettingsOpen(false);\r\n\r\n    setIsAddNoteOpen(prev => !prev);\r\n  };\r\n\r\n  const handleNotesHistory = () => {\r\n    setIsAddNoteOpen(false);\r\n    setIsSettingsOpen(false);\r\n\r\n    setIsHistoryOpen(prev => !prev);\r\n  };\r\n\r\n  const handleSettings = () => {\r\n    setIsAddNoteOpen(false);\r\n    setIsHistoryOpen(false);\r\n\r\n    setIsSettingsOpen(prev => !prev);\r\n  };\r\n\r\n  const handleClearHistory = async () => {\r\n    const token = getSessionItem(\"token\");\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BASE_URL}/notes/history/user/${userID}`,\r\n        \"DELETE\",\r\n        null,\r\n        { Authorization: `Bearer ${token}` }\r\n      );\r\n    } catch (error) {\r\n      // !add error handling\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  if (!isLoggedIn) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  // TODO change error code\r\n  if (error) {\r\n    return <Redirect to={{ pathname: \"/error\", state: { code: 401 } }} />;\r\n  }\r\n\r\n  return (\r\n    <PageContainer>\r\n      <Options>\r\n        <Title>Management</Title>\r\n        <ButtonContainer>\r\n          <RoundButton\r\n            text={createMode ? \"Add note\" : \"Update note\"}\r\n            onClick={handleAddNote}\r\n            isActive={isAddNoteOpen}\r\n          >\r\n            <FontAwesomeIcon icon={faPlus} />\r\n          </RoundButton>\r\n        </ButtonContainer>\r\n\r\n        <ButtonContainer>\r\n          <RoundButton\r\n            text=\"History\"\r\n            onClick={handleNotesHistory}\r\n            isActive={isHistoryOpen}\r\n          >\r\n            <FontAwesomeIcon icon={faHistory} />\r\n          </RoundButton>\r\n        </ButtonContainer>\r\n\r\n        <ButtonContainer>\r\n          <RoundButton\r\n            text=\"Settings\"\r\n            onClick={handleSettings}\r\n            isActive={isSettingsOpen}\r\n          >\r\n            <FontAwesomeIcon icon={faCog} />\r\n          </RoundButton>\r\n        </ButtonContainer>\r\n      </Options>\r\n\r\n      <AddNote\r\n        isOpen={isAddNoteOpen}\r\n        createMode={createMode}\r\n        setIsOpen={handleAddNote}\r\n        onFormSubmit={handleNoteAdd}\r\n        onBodyChange={setNoteBody}\r\n        onTitleChange={setNoteTitle}\r\n        value={{ body: noteBody, title: noteTitle }}\r\n      />\r\n      <NotesHistory isOpen={isHistoryOpen} setIsOpen={handleNotesHistory} />\r\n      <Settings\r\n        isOpen={isSettingsOpen}\r\n        setIsOpen={handleSettings}\r\n        handleClearHistory={handleClearHistory}\r\n      />\r\n\r\n      {isLoading ? (\r\n        <Spinner text=\"Loading...\" overlay={true} />\r\n      ) : (\r\n        <UserNotes\r\n          userNotes={userNotes}\r\n          setNotes={setUserNotes}\r\n          onNoteEdit={handleNoteEdit}\r\n          onNoteRemove={handleNoteRemove}\r\n        />\r\n      )}\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nconst Options = styled.section`\r\n  grid-area: 1/1/-1/4;\r\n\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  flex-basis: 100%;\r\n  height: 3rem;\r\n\r\n  font-size: 2.25rem;\r\n  text-align: center;\r\n\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.blue};\r\n\r\n  color: ${({ theme }) => theme.colors.gray};\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  position: relative;\r\n  flex-basis: 100%;\r\n\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: flex-start;\r\n\r\n  padding-left: 2rem;\r\n`;\r\n\r\nexport default UserPanel;\r\n","import GlobalStyleProvider from \"../context/globalStyle\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport { AuthContextProvider } from \"../context/Auth\";\nimport { SettingsContextProvider } from \"../context/Settings\";\nimport Theme from \"../context/Theme\";\nimport Error from \"./pages/Error\";\nimport MainContainer from \"./uiElements/MainContainer\";\nimport Menu from \"./uiElements/Menu\";\nimport Home from \"./pages/Home\";\nimport UserPanel from \"./pages/UserPanel\";\n\nconst App = () => {\n  return (\n    <>\n      <SettingsContextProvider>\n        <Theme>\n          <GlobalStyleProvider />\n\n          <AuthContextProvider>\n            <MainContainer>\n              <Menu title={\"All Your notes in a single place\"} />\n\n              <Switch>\n                <Route path=\"/\" component={Home} exact />\n                <Route path=\"/error\" component={Error} exact />\n                <Route path=\"/userPanel\" component={UserPanel} />\n              </Switch>\n            </MainContainer>\n          </AuthContextProvider>\n        </Theme>\n      </SettingsContextProvider>\n    </>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}