{"version":3,"sources":["context/Settings.js","context/globalStyle.js","context/Auth.js","context/Theme.js","components/pages/Error/index.js","components/uiElements/MainContainer/index.js","components/uiElements/Button/index.js","components/uiElements/Menu/MenuListItem.js","components/uiElements/Menu/MenuList.js","components/uiElements/Input/index.js","components/uiElements/Spinner/index.js","hooks/useHttpRequest.js","utils/handleSessionStorage.js","components/uiElements/LoginForm/index.js","components/uiElements/SideBar/index.js","components/uiElements/Menu/index.js","components/uiElements/PageContainer/index.js","components/uiElements/Footer/index.js","components/pages/Home/TestAccount.js","components/pages/Home/index.js","components/pages/AddNote/index.js","components/pages/History/HistoryItem.js","components/pages/History/index.js","components/uiElements/RoundButton/index.js","utils/handleButtonClick.js","components/uiElements/Note/index.js","components/pages/UserPanel/UserNotes.js","components/uiElements/Checkbox/index.js","components/uiElements/Radio/index.js","components/pages/Settings/index.js","components/pages/UserPanel/index.js","components/App.js","index.js"],"names":["SettingsContext","createContext","darkMode","SettingsContextProvider","children","useState","setDarkMode","fontSize","setFontSize","Provider","value","GlobalStyle","createGlobalStyle","theme","fonts","main","GlobalStyleProvider","useContext","AuthContext","AuthContextProvider","isLoggedIn","setIsLoggedIn","userID","setUserID","isLogged","console","error","Theme","colors","off","gray","blue","red","100","200","300","400","500","background","text","Wrapper","styled","div","Error","props","icon","faDizzy","location","state","code","MainContainer","Btn","Link","danger","disabled","active","Button","path","onClick","undefined","to","as","e","preventDefault","MenuListItem","toggleMenuVisibility","ul","MenuList","listItems","elements","listElements","i","length","push","renderListItems","Label","label","InputEl","input","Input","inputSize","type","desc","onChange","size","handleInputChange","target","textAreaStyle","resize","height","flexBasis","InputType","style","Container","LoadingSpinner","d","color","Overlay","Description","p","Spinner","overlay","containerRef","useRef","useEffect","spinner","current","gsap","rotation","repeat","duration","ease","ref","useHttpRequest","setError","isLoading","setIsLoading","sendRequest","useCallback","url","a","method","body","headers","fetch","response","json","responseData","ok","message","statusCode","status","clearError","getSessionItem","key","sessionStorage","getItem","setSessionItem","prev","setItem","Form","form","FormError","FormTitle","h2","LoginForm","isInSignUpMode","setIsInSignUpMode","name","setName","email","setEmail","password","setPassword","history","useHistory","handleFormSubmit","process","JSON","stringify","token","log","buttonContent","titleContent","isButtonDisabled","faPaperPlane","Bar","dark","CloseBtn","button","Backdrop","isOpen","SideBar","setIsOpen","backdropRef","backdrop","handleBackdropClick","addEventListener","removeEventListener","timeout","match","join","CSSTransition","in","classNames","unmountOnExit","faTimes","MenuTitle","h1","MenuBar","Menu","title","isFormOpen","setIsFormOpen","menuLinks","faClipboard","faHome","faPowerOff","links","slice","direction","PageContainer","Footer","Section","section","Credentials","Title","h3","SubTitle","h5","TestAccount","container","x","delay","timeline","defaults","y","autoAlpha","display","width","cursor","faExclamationTriangle","NoteCard","order","area","black","side","Home","faPenFancy","faEdit","faHistory","AddNote","createMode","onBodyChange","onTitleChange","onFormSubmit","NoteTitle","NoteDate","span","NoteBody","HistoryItem","completed","ErrorInfo","Icon","FontAwesomeIcon","NoHistory","NotesWrapper","NotesHistory","openAddNote","historyNotes","setHistoryNotes","Authorization","notes","fetchHistory","map","note","index","date","split","farSurprise","renderHistoryNotes","RoundBtn","isActive","RoundButton","handleChange","event","callback","includes","keyCode","NoteInfo","NoteTime","NoteSettings","tooltip","h6","Note","createdAt","_id","onNoteEdit","onNoteRemove","dateString","timeString","handleNoteRemove","handleNoteEdit","onKeyDown","tabIndex","faTrashAlt","UserNotes","userNotes","Box","Info","Checkbox","description","initialValue","checkboxState","setCheckboxState","toggleCheckbox","faCheck","toUpperCase","isChecked","RadioInput","Radio","handleOnChange","separator","Settings","handleClearHistory","handleFontSize","Options","ButtonContainer","UserPanel","setUserNotes","noteTitle","setNoteTitle","noteBody","setNoteBody","setCreateMode","editedNoteId","setEditedNoteId","isAddNoteOpen","setIsAddNoteOpen","isHistoryOpen","setIsHistoryOpen","isSettingsOpen","setIsSettingsOpen","fetchNotes","handleNoteAdd","newNotes","id","filter","el","handleAddNote","handleNotesHistory","handleSettings","pathname","faPlus","faCog","setNotes","App","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.245a3959.chunk.js","sourcesContent":["import { createContext, useState } from \"react\";\r\n\r\nexport const SettingsContext = createContext({ darkMode: false });\r\n\r\nexport const SettingsContextProvider = ({ children }) => {\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const [fontSize, setFontSize] = useState(16);\r\n\r\n  return (\r\n    <SettingsContext.Provider\r\n      value={{ darkMode, setDarkMode, fontSize, setFontSize }}\r\n    >\r\n      {children}\r\n    </SettingsContext.Provider>\r\n  );\r\n};\r\n\r\nexport default SettingsContext;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport { useContext } from \"react\";\r\n\r\nimport SettingsContext from \"context/Settings\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    * {\r\n        margin: 0;\r\n        padding: 0;\r\n        box-sizing: border-box;\r\n        font-family: ${({ theme }) => theme.fonts.main};\r\n    }\r\n\r\n    :root {\r\n\r\n    }\r\n\r\n    body {\r\n        overflow: hidden;\r\n        font-size: ${({ fontSize }) => fontSize}px;\r\n    }\r\n\r\n    a {\r\n        text-decoration: none;\r\n        outline: none;\r\n    }\r\n\r\n    button {\r\n        border: none;\r\n        outline: none;\r\n        background: none;\r\n\r\n        cursor: pointer;\r\n    }\r\n\r\n    button:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst GlobalStyleProvider = ({ children }) => {\r\n  const { fontSize } = useContext(SettingsContext);\r\n  return <GlobalStyle fontSize={fontSize}>{children}</GlobalStyle>;\r\n};\r\n\r\nexport default GlobalStyleProvider;\r\n","import { createContext, useState } from \"react\";\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport const AuthContextProvider = ({ children }) => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [userID, setUserID] = useState(null);\r\n\r\n  const handleStatusChange = isLogged => {\r\n    if (typeof isLogged === \"boolean\") {\r\n      setIsLoggedIn(isLogged);\r\n    } else {\r\n      console.error(`Expected boolean, instead got ${typeof isLogged}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isLoggedIn: isLoggedIn,\r\n        setIsLoggedIn: handleStatusChange,\r\n        userID: userID,\r\n        setUserID: setUserID,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n","import { ThemeProvider } from \"styled-components\";\r\nimport { useContext } from \"react\";\r\n\r\nimport SettingsContext from \"../context/Settings\";\r\n\r\nconst Theme = ({ children }) => {\r\n  const { darkMode } = useContext(SettingsContext);\r\n\r\n  const theme = {\r\n    colors: {\r\n      main: darkMode ? \"rgb(121, 137, 140)\" : \"rgb(143, 193, 204)\",\r\n      off: darkMode ? \"rgb(66, 88, 122)\" : \"rgb(255, 219, 120)\",\r\n      gray: \"rgb(140, 140, 140)\",\r\n      blue: \"rgb(102, 173, 189)\",\r\n      red: {\r\n        100: \"rgb(255, 226, 219)\",\r\n        200: \"rgb(222, 175, 164)\",\r\n        300: \"rgb(199, 125, 107)\",\r\n        400: \"rgb(222, 69, 33)\",\r\n        500: \"rgb(181, 34, 0)\",\r\n      },\r\n      background: darkMode ? \"rgb(50, 50, 50)\" : \"rgb(255, 255, 255)\",\r\n      text: darkMode ? \"rgb(200, 200, 200)\" : \"rgb(0, 0, 0)\",\r\n    },\r\n    fonts: {\r\n      main: \"'Blinker', sans-serif\",\r\n    },\r\n  };\r\n\r\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>;\r\n};\r\n\r\nexport default Theme;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faDizzy } from \"@fortawesome/free-solid-svg-icons\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Error = props => {\r\n  return (\r\n    <Wrapper>\r\n      <span>\r\n        <FontAwesomeIcon icon={faDizzy} />\r\n      </span>\r\n      <h1>Uuppsss... something went wrong</h1>\r\n      <h2>Please try to login again</h2>\r\n      <span>Error code: {props.location.state.code || \"500\"}</span>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  grid-area: 2/1/-1/-1;\r\n\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n\r\n  h1,\r\n  h2,\r\n  span {\r\n    flex-basis: 100%;\r\n\r\n    text-align: center;\r\n  }\r\n\r\n  span:first-child {\r\n    font-size: 10rem;\r\n\r\n    color: ${({ theme }) => theme.colors.gray};\r\n  }\r\n`;\r\n\r\nexport default Error;\r\n","import styled from \"styled-components\";\r\n\r\nconst MainContainer = ({ children }) => {\r\n  return <Wrapper>{children}</Wrapper>;\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n\r\n  display: grid;\r\n  grid-template-columns: repeat(12, 1fr);\r\n  grid-template-rows: repeat(12, 1fr);\r\n`;\r\n\r\nexport default MainContainer;\r\n","import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n/**\r\n * Functional react component - renders button component\r\n * @param {Object} props - react props\r\n * @returns {JSX.Element}\r\n * @example\r\n * <Btn\r\n *  onClick={() => console.log(\"clicked\")\r\n *  danger={true} path=\"/index.html\"}\r\n * >\r\n *  <span>description</span>\r\n * </Btn>\r\n *\r\n */\r\nconst Button = ({\r\n  path,\r\n  onClick,\r\n  children,\r\n  active = undefined,\r\n  disabled = false,\r\n  danger = undefined,\r\n}) => {\r\n  const handleOnClick = e => {\r\n    if (!path) {\r\n      e.preventDefault();\r\n    }\r\n\r\n    if (!disabled && typeof onClick === \"function\") onClick();\r\n  };\r\n\r\n  return (\r\n    <Btn\r\n      to={path}\r\n      as={!path && \"button\"}\r\n      onClick={handleOnClick}\r\n      active={active}\r\n      disabled={disabled}\r\n      danger={danger}\r\n    >\r\n      {children}\r\n    </Btn>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  /**\r\n   * adding a path will cause the component to render <a> tag instead of <button>\r\n   */\r\n  path: PropTypes.string,\r\n\r\n  /**\r\n   * function which will be triggred on click\r\n   */\r\n  onClick: PropTypes.func,\r\n\r\n  /**\r\n   * if set to true hover effect will be displayed permanently\r\n   */\r\n  active: PropTypes.bool,\r\n\r\n  /**\r\n   * if set to true component will not display hover effect, onClick function will not be triggered\r\n   */\r\n  disabled: PropTypes.bool,\r\n\r\n  /**\r\n   * Changes button theme to red\r\n   */\r\n  danger: PropTypes.bool,\r\n};\r\n\r\nconst Btn = styled(Link)`\r\n  position: relative;\r\n  margin: 0 1rem;\r\n\r\n  display: flex;\r\n\r\n  box-shadow: inset 0 0 0px 2px\r\n    ${({ theme, danger }) =>\r\n      danger ? theme.colors.red[\"500\"] : theme.colors.off};\r\n  border-radius: 5px;\r\n\r\n  font-size: 1.5rem;\r\n\r\n  background-color: ${({ danger, theme }) =>\r\n    danger ? theme.colors.red[200] : \"white\"};\r\n  filter: grayscale(${({ disabled }) => (disabled ? \"1\" : \"0\")});\r\n  color: ${({ danger }) => (danger ? \"white\" : \"gray\")};\r\n\r\n  padding: 1rem;\r\n  transition: 300ms;\r\n\r\n  span {\r\n    z-index: 999;\r\n    margin: 0 0.1rem;\r\n  }\r\n\r\n  &:focus&:before {\r\n    clip-path: circle(100% at left bottom);\r\n  }\r\n\r\n  &:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    border-radius: 5px;\r\n\r\n    background-color: ${({ theme, danger }) =>\r\n      danger ? theme.colors.red[\"500\"] : theme.colors.off};\r\n    clip-path: ${({ active }) =>\r\n      active ? \"circle(100% at left bottom)\" : \"circle(0 at left bottom)\"};\r\n    transition: 0.4s linear;\r\n  }\r\n\r\n  &:hover&:before {\r\n    clip-path: circle(\r\n      ${({ disabled }) => (disabled ? \"0\" : \"100%\")} at left bottom\r\n    );\r\n  }\r\n`;\r\n\r\nexport default Button;\r\n","import Button from \"components/uiElements/Button\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst MenuListItem = ({ text, path, icon, toggleMenuVisibility }) => {\r\n  if (path) {\r\n    return (\r\n      <li>\r\n        <Button path={path}>\r\n          <span>{icon}</span> <span>{text}</span>\r\n        </Button>\r\n      </li>\r\n    );\r\n  } else {\r\n    return (\r\n      <li>\r\n        <Button onClick={toggleMenuVisibility}>\r\n          <span>{icon}</span> <span>{text}</span>\r\n        </Button>\r\n      </li>\r\n    );\r\n  }\r\n};\r\n\r\nMenuListItem.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  path: PropTypes.string,\r\n  icon: PropTypes.element.isRequired,\r\n  toggleMenuVisibility: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default MenuListItem;\r\n","import styled from \"styled-components\";\r\n\r\nimport MenuListItem from \"./MenuListItem\";\r\n\r\n/**\r\n * Renders nav links\r\n * @param {Object} props - react props\r\n * @returns {JSX.Element}\r\n */\r\nconst MenuList = ({ listItems, toggleMenuVisibility }) => {\r\n  /**\r\n   * Renders link on the screen\r\n   * @param {Object[]} elements - list elements\r\n   * @param {string} elements[].text - text rendered inside list item\r\n   * @param {string} elements[].path - link path\r\n   * @param {JSX.Element} elements[].icon - icon wrapped in react component\r\n   * @returns {Object[]}\r\n   */\r\n  const renderListItems = elements => {\r\n    const listElements = [];\r\n\r\n    for (let i = 0; i < elements.length; i++) {\r\n      const { text, path, icon } = elements[i];\r\n\r\n      listElements.push(\r\n        <MenuListItem\r\n          text={text}\r\n          path={path}\r\n          key={i}\r\n          icon={icon}\r\n          toggleMenuVisibility={toggleMenuVisibility}\r\n        />\r\n      );\r\n    }\r\n\r\n    return listElements;\r\n  };\r\n\r\n  return <Wrapper>{renderListItems(listItems)}</Wrapper>;\r\n};\r\n\r\nconst Wrapper = styled.ul`\r\n  display: flex;\r\n\r\n  list-style: none;\r\n`;\r\n\r\nexport default MenuList;\r\n","import styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n/**\r\n * Renders input in the label\r\n * @param {Object} props - react props\r\n * @returns {JSX.Element}\r\n */\r\nconst Input = ({\r\n  type = \"text\",\r\n  desc,\r\n  onChange,\r\n  size = \"medium\",\r\n  value = \"\",\r\n}) => {\r\n  const handleInputChange = e => {\r\n    onChange(e.target.value);\r\n  };\r\n\r\n  let inputSize;\r\n\r\n  if (size === \"small\") {\r\n    inputSize = \"50%\";\r\n  } else if (size === \"medium\") {\r\n    inputSize = \"75%\";\r\n  } else if (size === \"large\") {\r\n    inputSize = \"90%\";\r\n  }\r\n\r\n  const textAreaStyle = {\r\n    resize: \"none\",\r\n    height: \"200px\",\r\n    flexBasis: inputSize,\r\n  };\r\n\r\n  const InputType =\r\n    type === \"textarea\" ? (\r\n      <InputEl\r\n        as={\"textarea\"}\r\n        onChange={handleInputChange}\r\n        style={textAreaStyle}\r\n        value={value}\r\n      />\r\n    ) : (\r\n      <InputEl\r\n        type={type}\r\n        onChange={handleInputChange}\r\n        style={{ flexBasis: inputSize }}\r\n        value={value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <Label>\r\n      <h3>{desc}</h3>\r\n      {InputType}\r\n    </Label>\r\n  );\r\n};\r\n\r\nInput.propTypes = {\r\n  /**\r\n   * input type - default is text\r\n   */\r\n  type: PropTypes.string,\r\n  /**\r\n   * Input description\r\n   */\r\n  desc: PropTypes.string,\r\n  /**\r\n   * Function which is triggered on every state change\r\n   */\r\n  onChange: PropTypes.func.isRequired,\r\n\r\n  /**\r\n   * Sets input size\r\n   */\r\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\r\n\r\n  /**\r\n   * value - for controlled inputs\r\n   */\r\n  value: PropTypes.string,\r\n};\r\n\r\nconst Label = styled.label`\r\n  width: 100%;\r\n\r\n  margin-bottom: 1rem;\r\n\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  h3,\r\n  span {\r\n    flex-basis: 100%;\r\n\r\n    text-align: center;\r\n  }\r\n\r\n  h3 {\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst InputEl = styled.input`\r\n  margin-top: 0.5rem;\r\n\r\n  font-size: 1.5rem;\r\n\r\n  border: none;\r\n  border-radius: 5px;\r\n  outline: none;\r\n  box-shadow: 0 0 0 2px ${({ theme }) => theme.colors.gray};\r\n\r\n  background-color: white;\r\n\r\n  padding: 0.25rem;\r\n\r\n  &:focus {\r\n    box-shadow: 0 0 0 2px ${({ theme }) => theme.colors.off};\r\n  }\r\n`;\r\n\r\nexport default Input;\r\n","import gsap from \"gsap\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { useEffect, useRef } from \"react\";\r\n\r\n/**\r\n * Functional Component - renders loading spinner on the screen\r\n * @param {Object} props - React props\r\n * @returns {JSX.Element}\r\n */\r\nconst Spinner = ({ text, overlay = false }) => {\r\n  const containerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const spinner = containerRef.current.children;\r\n\r\n    gsap.to(spinner[0], {\r\n      rotation: 360,\r\n      repeat: -1,\r\n      duration: 2,\r\n      ease: \"none\",\r\n    });\r\n    gsap.to(spinner[1], {\r\n      rotation: -360,\r\n      repeat: -1,\r\n      duration: 1.25,\r\n      ease: \"none\",\r\n    });\r\n    gsap.to(spinner[2], {\r\n      rotation: 360,\r\n      repeat: -1,\r\n      duration: 1.5,\r\n      ease: \"none\",\r\n    });\r\n    gsap.to(spinner[3], {\r\n      rotation: -360,\r\n      repeat: -1,\r\n      duration: 1.75,\r\n      ease: \"none\",\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Container ref={containerRef}>\r\n        <LoadingSpinner d={50} color={\"rgb(0, 222, 205)\"}></LoadingSpinner>\r\n        <LoadingSpinner d={40} color={\"rgb(51, 198, 212)\"}></LoadingSpinner>\r\n        <LoadingSpinner d={30} color={\"rgb(59, 161, 212)\"}></LoadingSpinner>\r\n        <LoadingSpinner d={20} color={\"rgb(49, 83, 140)\"}></LoadingSpinner>\r\n        {text && <Description>{text}</Description>}\r\n      </Container>\r\n\r\n      {overlay && <Overlay />}\r\n    </>\r\n  );\r\n};\r\n\r\nSpinner.propTypes = {\r\n  /**\r\n   * Text which is display below the spinner\r\n   */\r\n  text: PropTypes.string,\r\n\r\n  /**\r\n   * displays an overlay to block user interaction with the page\r\n   */\r\n  overlay: PropTypes.bool,\r\n};\r\n\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  z-index: 99999;\r\n  top: 50%;\r\n  left: 50%;\r\n\r\n  transform: translate(-50%, -50%);\r\n  width: 10rem;\r\n  height: 10rem;\r\n\r\n  border-radius: 10px;\r\n  box-shadow: inset 0 0 4px 0 ${({ theme }) => theme.colors.off};\r\n\r\n  background-color: ${({ theme }) => theme.colors.main};\r\n  overflow: hidden;\r\n`;\r\n\r\nconst LoadingSpinner = styled.div`\r\n  position: absolute;\r\n  top: ${({ d }) => (100 - d) / 2}%;\r\n  left: ${({ d }) => (100 - d) / 2}%;\r\n\r\n  width: ${({ d }) => d}%;\r\n  height: ${({ d }) => d}%;\r\n\r\n  border-radius: 50%;\r\n  background-color: ${({ color }) => color};\r\n  box-shadow: 0 0 4px 0px rgb(49, 83, 140);\r\n  overflow: hidden;\r\n\r\n  &:after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n\r\n    width: 100%;\r\n    height: 50%;\r\n\r\n    background-color: white;\r\n  }\r\n\r\n  &:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 5%;\r\n    left: 5%;\r\n\r\n    width: 90%;\r\n    height: 90%;\r\n\r\n    border-radius: 50%;\r\n\r\n    background-color: white;\r\n  }\r\n`;\r\n\r\nconst Overlay = styled.div`\r\n  z-index: 9999;\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n\r\n  background-color: rgba(125, 125, 125, 0.7);\r\n`;\r\n\r\nconst Description = styled.p`\r\n  position: absolute;\r\n  bottom: 0.25rem;\r\n  left: 0;\r\n  right: 0;\r\n\r\n  text-align: center;\r\n  font-family: ${({ theme }) => theme.fonts.main};\r\n  color: gray;\r\n`;\r\n\r\nexport default Spinner;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttpRequest = () => {\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n\r\n      try {\r\n        const response = await fetch(url, {\r\n          method: method,\r\n          body: body,\r\n          headers,\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        if (!response.ok) {\r\n          setError(responseData.message);\r\n          throw new Error(responseData.message);\r\n        }\r\n\r\n        setIsLoading(false);\r\n        return { ...responseData, statusCode: response.status };\r\n      } catch (err) {\r\n        setIsLoading(false);\r\n        setError(err.message);\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => {\r\n    setError(null);\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","/**\r\n * Recovers an item from sessionStorage. Undefined is set if not item was found.\r\n * @param {String} key - an item key\r\n * @return {string | undefined}\r\n */\r\nexport const getSessionItem = key => {\r\n  const sessionItem = sessionStorage.getItem(key);\r\n\r\n  return sessionItem || undefined;\r\n};\r\n\r\n/**\r\n * sets an item in the sesstionStorage - if an item is overwritten, returns removed item\r\n * @param {String} key - item key\r\n * @param {String} value - item id\r\n * @return {undefined || string}\r\n */\r\nexport const setSessionItem = (key, value) => {\r\n  const prev = sessionStorage.getItem(key);\r\n  sessionStorage.setItem(key, value);\r\n\r\n  return prev || undefined;\r\n};\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\r\nimport styled from \"styled-components\";\r\nimport { useState, useContext, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport AuthContext from \"context/Auth\";\r\nimport Button from \"components/uiElements/Button\";\r\nimport Input from \"components/uiElements/Input\";\r\nimport Spinner from \"components/uiElements/Spinner\";\r\nimport { useHttpRequest } from \"hooks/useHttpRequest\";\r\nimport { setSessionItem } from \"utils/handleSessionStorage\";\r\n\r\nconst LoginForm = () => {\r\n  const [isInSignUpMode, setIsInSignUpMode] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const { error, isLoading, sendRequest, clearError } = useHttpRequest();\r\n  const { setIsLoggedIn, setUserID } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    clearError();\r\n  }, [name, email, password, clearError]);\r\n\r\n  const handleSwitchMode = () => {\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n\r\n    clearError();\r\n\r\n    setIsInSignUpMode(prev => !prev);\r\n  };\r\n\r\n  const handleFormSubmit = async () => {\r\n    try {\r\n      const responseData = await sendRequest(\r\n        `${process.env.REACT_APP_BASE_URL}/users/${\r\n          isInSignUpMode ? \"signup\" : \"login\"\r\n        }`,\r\n        \"POST\",\r\n        JSON.stringify({\r\n          name: isInSignUpMode ? name : null,\r\n          email: email,\r\n          password: password,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n\r\n      if (\r\n        responseData?.statusCode === 201 ||\r\n        (!isInSignUpMode && responseData?.statusCode === 200)\r\n      ) {\r\n        setIsLoggedIn(true);\r\n        setUserID(responseData.userID);\r\n        setSessionItem(\"token\", responseData.token);\r\n        history.push(\"/userPanel\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      history.push(\"/error\");\r\n    }\r\n  };\r\n\r\n  const buttonContent = isInSignUpMode\r\n    ? \"Switch to log in\"\r\n    : \"Switch to signup\";\r\n\r\n  const titleContent = isInSignUpMode ? \"Sign up\" : \"Log in\";\r\n  let isButtonDisabled = !password || !email;\r\n\r\n  if (isInSignUpMode) {\r\n    isButtonDisabled = !password || !email || !name;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <FormTitle>{titleContent}</FormTitle>\r\n\r\n      {isLoading && <Spinner text=\"Please wait\" />}\r\n\r\n      <Form>\r\n        {error && <FormError>{error}</FormError>}\r\n        {isInSignUpMode && (\r\n          <Input type=\"text\" desc=\"Name\" onChange={setName} value={name} />\r\n        )}\r\n\r\n        <Input type=\"email\" desc=\"Email\" onChange={setEmail} value={email} />\r\n\r\n        <Input\r\n          type=\"password\"\r\n          desc=\"Password\"\r\n          onChange={setPassword}\r\n          value={password}\r\n        />\r\n\r\n        <Button\r\n          as=\"button\"\r\n          onClick={handleFormSubmit}\r\n          disabled={isButtonDisabled}\r\n        >\r\n          <span>Submit</span>\r\n          <span>\r\n            <FontAwesomeIcon icon={faPaperPlane} />\r\n          </span>\r\n        </Button>\r\n      </Form>\r\n\r\n      <Button as=\"button\" onClick={handleSwitchMode}>\r\n        <span>{buttonContent}</span>\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst FormError = styled.div`\r\n  margin-bottom: 1rem;\r\n\r\n  border-radius: 5px;\r\n\r\n  color: ${({ theme }) => theme.colors.red[\"500\"]};\r\n  background-color: rgb(237, 204, 197);\r\n\r\n  padding: 0.5rem;\r\n`;\r\n\r\nconst FormTitle = styled.h2`\r\n  z-index: 999;\r\n  flex-basis: 100%;\r\n\r\n  text-align: center;\r\n  color: white;\r\n`;\r\n\r\nexport default LoginForm;\r\n","import { CSSTransition } from \"react-transition-group\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useEffect, useRef } from \"react\";\r\n\r\n/**\r\n * Functional react component - renders side bar on the screen\r\n * @param {Object} props - react props\r\n * @returns {JSX.Element}\r\n */\r\nconst SideBar = ({ children, isOpen, setIsOpen, size = \"30vw\" }) => {\r\n  const backdropRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const backdrop = backdropRef.current;\r\n    const handleBackdropClick = () => {\r\n      setIsOpen();\r\n    };\r\n\r\n    backdrop.addEventListener(\"click\", handleBackdropClick);\r\n\r\n    return () => {\r\n      backdrop.removeEventListener(\"click\", handleBackdropClick);\r\n    };\r\n  }, [setIsOpen]);\r\n\r\n  const handleIsOpen = () => {\r\n    setIsOpen();\r\n  };\r\n\r\n  // timeout depends on window size\r\n  let timeout = size.match(/\\d/g).join(\"\") * 1;\r\n\r\n  if (timeout < 100) timeout = timeout * 10;\r\n  else if (timeout > 1000) timeout = 1000;\r\n\r\n  return (\r\n    <>\r\n      <Backdrop ref={backdropRef} isOpen={isOpen}></Backdrop>\r\n      <CSSTransition\r\n        in={isOpen}\r\n        classNames={\"bar\"}\r\n        timeout={timeout}\r\n        unmountOnExit\r\n      >\r\n        <Bar size={size}>\r\n          {setIsOpen && (\r\n            <CloseBtn onClick={handleIsOpen}>\r\n              <FontAwesomeIcon icon={faTimes} />\r\n            </CloseBtn>\r\n          )}\r\n\r\n          {children}\r\n        </Bar>\r\n      </CSSTransition>\r\n    </>\r\n  );\r\n};\r\n\r\nSideBar.propTypes = {\r\n  /**\r\n   * Determinates if component is visible\r\n   */\r\n  isOpen: PropTypes.bool.isRequired,\r\n\r\n  /**\r\n   * Sets components width, all units are accepted\r\n   */\r\n  size: PropTypes.string,\r\n\r\n  /**\r\n   * function which triggers isOpen state change\r\n   */\r\n  setIsOpen: PropTypes.func.isRequired,\r\n};\r\n\r\nconst Bar = styled.div`\r\n  position: absolute;\r\n  z-index: 999;\r\n  top: calc(100vh / 12);\r\n  right: 0;\r\n  bottom: 0;\r\n\r\n  width: ${({ size }) => size};\r\n  min-width: 200px;\r\n\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  box-shadow: 0 0 4px 0 black;\r\n\r\n  background: ${({ theme }) => theme.colors.main};\r\n\r\n  transition: 300ms;\r\n\r\n  &:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    background-color: ${({ theme, dark }) =>\r\n      dark ? \"rgb(150, 150, 150)\" : theme.colors.blue};\r\n    clip-path: circle(200px at right top);\r\n  }\r\n\r\n  &.bar-enter {\r\n    transform: translateX(${({ size }) => size});\r\n  }\r\n\r\n  &.bar-enter-active {\r\n    transform: translateX(0);\r\n  }\r\n\r\n  &.bar-exit {\r\n    transform: translateX(0);\r\n  }\r\n\r\n  &.bar-exit-active {\r\n    transform: translateX(${({ size }) => size});\r\n  }\r\n`;\r\n\r\nconst CloseBtn = styled.button`\r\n  position: absolute;\r\n  top: 1rem;\r\n  right: 1rem;\r\n\r\n  font-size: 1.5rem;\r\n\r\n  color: white;\r\n  transition: transform 300ms;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    transform: scale(1.25);\r\n    color: ${({ theme }) => theme.colors.off};\r\n  }\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  z-index: 999;\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n\r\n  display: ${({ isOpen }) => (isOpen ? \"block\" : \"none\")};\r\n\r\n  background: rgb(75, 75, 75, 0.35);\r\n`;\r\n\r\nexport default SideBar;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPowerOff } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faClipboard } from \"@fortawesome/free-solid-svg-icons\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport AuthContext from \"context/Auth\";\r\nimport MenuList from \"./MenuList\";\r\nimport LoginForm from \"components/uiElements/LoginForm\";\r\nimport SideBar from \"components/uiElements/SideBar\";\r\n\r\n/**\r\n * Renders navigation bar\r\n * @param {Object} props - react props\r\n * @returns {JSX.Element}\r\n */\r\nconst Menu = ({ title }) => {\r\n  const [isFormOpen, setIsFormOpen] = useState(false);\r\n  const { isLoggedIn, setIsLoggedIn } = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  const menuLinks = [\r\n    {\r\n      text: \"Dashboard\",\r\n      path: \"/userPanel\",\r\n      icon: <FontAwesomeIcon icon={faClipboard} />,\r\n    },\r\n    {\r\n      text: \"Home\",\r\n      path: \"/\",\r\n      icon: <FontAwesomeIcon icon={faHome} />,\r\n    },\r\n    {\r\n      text: isLoggedIn ? \"Logout\" : \"Login\",\r\n      icon: <FontAwesomeIcon icon={faPowerOff} />,\r\n    },\r\n  ];\r\n\r\n  const sideMenuHandler = direction => {\r\n    if (!isLoggedIn) {\r\n      if (typeof direction === \"boolean\") {\r\n        setIsFormOpen(direction);\r\n      } else {\r\n        setIsFormOpen(prev => !prev);\r\n      }\r\n    } else {\r\n      history.push(\"/\");\r\n      setIsLoggedIn(false);\r\n    }\r\n  };\r\n\r\n  const links = isLoggedIn ? menuLinks : menuLinks.slice(1);\r\n\r\n  return (\r\n    <>\r\n      <MenuBar>\r\n        {title && <MenuTitle>{title}</MenuTitle>}\r\n        <MenuList listItems={links} toggleMenuVisibility={sideMenuHandler} />\r\n      </MenuBar>\r\n\r\n      {!isLoggedIn && (\r\n        <SideBar isOpen={isFormOpen} setIsOpen={() => setIsFormOpen(false)}>\r\n          <LoginForm />\r\n        </SideBar>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nMenu.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nconst MenuTitle = styled.h1`\r\n  margin-right: auto;\r\n  margin-left: 1rem;\r\n\r\n  text-align: left;\r\n  color: white;\r\n`;\r\n\r\nconst MenuBar = styled.div`\r\n  z-index: 9999;\r\n  position: relative;\r\n  grid-area: 1/1/2/-1;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n\r\n  box-shadow: 0 0 4px 0 black;\r\n\r\n  background-color: ${({ theme }) => theme.colors.main};\r\n\r\n  padding: 0.5rem 0;\r\n\r\n  &:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: ${({ theme, dark }) =>\r\n      dark ? \"rgb(150, 150, 150)\" : theme.colors.blue};\r\n    clip-path: circle(200px at right bottom);\r\n  }\r\n`;\r\n\r\nexport default Menu;\r\n","import styled from \"styled-components\";\r\n\r\nconst PageContainer = ({ children }) => {\r\n  return <Wrapper>{children}</Wrapper>;\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  grid-area: 2/1/-1/-1;\r\n\r\n  display: grid;\r\n\r\n  grid-template-columns: repeat(12, 1fr);\r\n  grid-template-rows: repeat(12, 1fr);\r\n\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n`;\r\n\r\nexport default PageContainer;\r\n","import styled from \"styled-components\";\r\n\r\nconst Footer = () => {\r\n  return <Wrapper>Copyright&#169; 2021 Wojciech Rygorowicz</Wrapper>;\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  grid-area: 12/1/-1/-1;\r\n\r\n  display: flex;\r\n  align-items: flex-end;\r\n\r\n  color: ${({ theme }) => theme.colors.gray};\r\n`;\r\n\r\nexport default Footer;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faExclamationTriangle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport gsap from \"gsap\";\r\nimport styled from \"styled-components\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\n\r\nconst TestAccount = () => {\r\n  const containerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const container = containerRef.current;\r\n\r\n    gsap.to(container, {\r\n      x: 0,\r\n      delay: 1.5,\r\n      duration: 0.2,\r\n      ease: \"none\",\r\n    });\r\n  }, []);\r\n\r\n  const handleRevealPassowrd = () => {\r\n    const container = containerRef.current;\r\n\r\n    const tl = gsap.timeline({ defaults: { duration: 0.3 } });\r\n\r\n    tl.to(container, {\r\n      y: \"50%\",\r\n      height: \"50%\",\r\n    })\r\n      .to(container.children[0], { autoAlpha: 0 })\r\n      .to(container.children[0], { display: \"none\", duration: 0 })\r\n      .to(\r\n        container,\r\n        {\r\n          width: \"25vw\",\r\n        },\r\n        \"-=0.2\"\r\n      )\r\n      .to(container.children[1], {\r\n        display: \"flex\",\r\n        cursor: \"default\",\r\n      })\r\n      .to(container.children[1], {\r\n        autoAlpha: 1,\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Wrapper ref={containerRef} onClick={handleRevealPassowrd}>\r\n      <Title>Test account available</Title>\r\n\r\n      <Section>\r\n        <SubTitle>Try without creating account</SubTitle>\r\n        <p>\r\n          <span>\r\n            <FontAwesomeIcon icon={faExclamationTriangle} />\r\n          </span>{\" \"}\r\n          Please keep in mind\r\n        </p>\r\n        <p>\r\n          Other users may also use this account to try the app. Do not store any\r\n          confidential data in the test account!\r\n        </p>\r\n\r\n        <Credentials>\r\n          <p>\r\n            Email: <span>t@t.com</span>\r\n          </p>\r\n          <p>\r\n            Password: <span>abc123</span>\r\n          </p>\r\n        </Credentials>\r\n      </Section>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n  right: 0;\r\n  bottom: 50%;\r\n\r\n  height: 25%;\r\n\r\n  transform: translateX(100%);\r\n\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  box-shadow: 0 0 4px 1px black;\r\n  border: 2px solid ${({ theme }) => theme.colors.gray};\r\n  border-top-left-radius: 10px;\r\n  border-bottom-left-radius: 10px;\r\n  border-right: none;\r\n\r\n  color: white;\r\n  background: ${({ theme }) => theme.colors.gray};\r\n\r\n  padding: 1rem;\r\n  cursor: pointer;\r\n\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Section = styled.section`\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  font-size: 1.25rem;\r\n  text-align: justify;\r\n\r\n  opacity: 0;\r\n  visibility: hidden;\r\n  display: none;\r\n\r\n  span {\r\n    color: ${({ theme }) => theme.colors.off};\r\n  }\r\n`;\r\n\r\nconst Credentials = styled.div`\r\n  width: 80%;\r\n  height: 25%;\r\n\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  border-radius: 10px;\r\n  box-shadow: inset 0 0 4px 1px ${({ theme }) => theme.colors.gray};\r\n\r\n  text-align: center;\r\n\r\n  background: white;\r\n  color: ${({ theme }) => theme.colors.gray};\r\n\r\n  p {\r\n    flex-basis: 100%;\r\n\r\n    color: ${({ theme }) => theme.colors.main};\r\n  }\r\n\r\n  span {\r\n    color: ${({ theme }) => theme.colors.gray};\r\n  }\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  writing-mode: vertical-lr;\r\n`;\r\n\r\nconst SubTitle = styled.h5`\r\n  flex-basis: 100%;\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.main};\r\n\r\n  font-size: 1.5rem;\r\n  font-weight: 100;\r\n  text-align: center;\r\n`;\r\n\r\nexport default TestAccount;\r\n","import styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPenFancy } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faHistory } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport PageContainer from \"components/uiElements/PageContainer\";\r\nimport Footer from \"components/uiElements/Footer\";\r\nimport TestAccount from \"components/pages/Home/TestAccount\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <PageContainer>\r\n      <NoteCard area={\"2/2/5/4\"} order={1} side=\"left\">\r\n        <h3>Create</h3>\r\n        <span>\r\n          <FontAwesomeIcon icon={faPenFancy} />\r\n        </span>\r\n        <p>Register or log in and create your first note within a minute!</p>\r\n      </NoteCard>\r\n      <NoteCard area={\"4/3/7/6\"} order={0} dark></NoteCard>\r\n      <NoteCard area={\"8/2/11/4\"} order={1} dark>\r\n        <h3>Update</h3>\r\n        <span>\r\n          <FontAwesomeIcon icon={faEdit} />\r\n        </span>\r\n        <p>Edit your notes any time You want!</p>\r\n      </NoteCard>\r\n      <NoteCard area={\"6/5/9/8\"} order={1} side=\"left\">\r\n        <h3>Manage</h3>\r\n        <span>\r\n          <FontAwesomeIcon icon={faHistory} />\r\n        </span>\r\n        <p>Mark as completed, delete, browse deleted, and much more!</p>\r\n      </NoteCard>\r\n\r\n      <TestAccount />\r\n      <Footer />\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nconst NoteCard = styled.section`\r\n  position: relative;\r\n  z-index: ${({ order }) => order};\r\n  grid-area: ${({ area }) => area};\r\n\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n\r\n  box-shadow: 0 0 4px 0 ${({ theme }) => theme.colors.black};\r\n  border: 2px solid ${({ theme }) => theme.colors.gray};\r\n  border-radius: 10px;\r\n\r\n  background: ${({ theme, dark }) =>\r\n    dark ? theme.colors.gray : theme.colors.main};\r\n\r\n  padding: 1rem;\r\n\r\n  h3,\r\n  p,\r\n  span {\r\n    z-index: 999;\r\n    font-size: 1.5rem;\r\n\r\n    color: white;\r\n  }\r\n\r\n  h3 {\r\n    flex-basis: 100%;\r\n    height: 2rem;\r\n\r\n    border-bottom: 1px solid white;\r\n  }\r\n\r\n  span {\r\n    position: absolute;\r\n    top: 0.5rem;\r\n    right: 0.5rem;\r\n  }\r\n\r\n  &:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    border-radius: 10px;\r\n\r\n    background-color: ${({ theme, dark }) =>\r\n      dark ? \"rgb(150, 150, 150)\" : theme.colors.blue};\r\n    clip-path: circle(\r\n      ${({ side }) =>\r\n        side === \"left\" ? \"90% at left bottom\" : \"75% at right bottom\"}\r\n    );\r\n  }\r\n`;\r\n\r\nexport default Home;\r\n","import styled from \"styled-components\";\r\n\r\nimport Button from \"components/uiElements/Button\";\r\nimport Input from \"components/uiElements/Input\";\r\nimport SideBar from \"components/uiElements/SideBar\";\r\n\r\nconst AddNote = ({\r\n  createMode,\r\n  isOpen,\r\n  setIsOpen,\r\n  onBodyChange,\r\n  onTitleChange,\r\n  onFormSubmit,\r\n  value = { body: \"\", title: \"\" },\r\n}) => {\r\n  const titleContent = createMode ? \"Add note\" : \"Edit note\";\r\n  return (\r\n    <SideBar isOpen={isOpen} setIsOpen={setIsOpen}>\r\n      <Form>\r\n        <FormTitle>{titleContent}</FormTitle>\r\n        <Input\r\n          type=\"text\"\r\n          desc=\"Title\"\r\n          onChange={onTitleChange}\r\n          size=\"medium\"\r\n          value={value.title}\r\n        />\r\n        <Input\r\n          type=\"textarea\"\r\n          desc=\"Description\"\r\n          onChange={onBodyChange}\r\n          size=\"medium\"\r\n          value={value.body}\r\n        />\r\n\r\n        <Button onClick={onFormSubmit} disabled={!value.body || !value.title}>\r\n          <span>{createMode ? \"Create \" : \"Update \"}note</span>\r\n        </Button>\r\n      </Form>\r\n    </SideBar>\r\n  );\r\n};\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst FormTitle = styled.h3`\r\n  z-index: 999;\r\n  margin-bottom: 5rem;\r\n\r\n  font-size: 2rem;\r\n\r\n  color: white;\r\n`;\r\n\r\nexport default AddNote;\r\n","import styled from \"styled-components\";\r\nimport PropsTypes from \"prop-types\";\r\n\r\n/**\r\n * Functional React component - renders removed note\r\n * @param {Object} props - React props\r\n * @returns\r\n */\r\nconst HistoryItem = ({ title, body, completed, key }) => {\r\n  return (\r\n    <Wrapper key={key}>\r\n      <NoteTitle>{title}</NoteTitle>\r\n      <NoteDate>Completed: {completed}</NoteDate>\r\n      <NoteBody>{body}</NoteBody>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nHistoryItem.propTypes = {\r\n  /**\r\n   * Note title\r\n   */\r\n  title: PropsTypes.string.isRequired,\r\n\r\n  /**\r\n   * Note body\r\n   */\r\n  body: PropsTypes.string.isRequired,\r\n\r\n  /**\r\n   * Date as a string when note was marked as completed\r\n   */\r\n  completed: PropsTypes.string.isRequired,\r\n\r\n  /**\r\n   * Unique key - react list key\r\n   */\r\n  key: PropsTypes.any.isRequired,\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  z-index: 999;\r\n  margin: 0.5rem 0;\r\n  flex-basis: 75%;\r\n\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  border-radius: 5px;\r\n\r\n  background-color: white;\r\n  color: ${({ theme }) => theme.colors.gray};\r\n\r\n  padding: 0.25rem;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst NoteTitle = styled.h5`\r\n  flex-basis: 100%;\r\n\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.gray};\r\n\r\n  text-align: left;\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst NoteDate = styled.span`\r\n  flex-basis: 100%;\r\n\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.gray};\r\n\r\n  text-align: left;\r\n`;\r\n\r\nconst NoteBody = styled.p`\r\n  flex-basis: 100%;\r\n`;\r\n\r\nexport default HistoryItem;\r\n","import styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSurprise as farSurprise } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faDizzy } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport AuthContext from \"context/Auth\";\r\nimport Button from \"components/uiElements/Button\";\r\nimport HistoryItem from \"./HistoryItem\";\r\nimport SideBar from \"components/uiElements/SideBar\";\r\nimport Spinner from \"components/uiElements/Spinner\";\r\nimport { useHttpRequest } from \"hooks/useHttpRequest\";\r\nimport { useEffect, useContext, useState } from \"react\";\r\nimport { getSessionItem } from \"utils/handleSessionStorage\";\r\n\r\nconst NotesHistory = ({ isOpen, setIsOpen, openAddNote }) => {\r\n  const [historyNotes, setHistoryNotes] = useState([]);\r\n  const { sendRequest, error, isLoading } = useHttpRequest();\r\n  const { userID } = useContext(AuthContext);\r\n\r\n  //! data is fetched TOO OFTEN\r\n  //! on each open/close action history is fetched again\r\n  useEffect(() => {\r\n    const fetchHistory = async () => {\r\n      const token = getSessionItem(\"token\");\r\n      const responseData = await sendRequest(\r\n        `${process.env.REACT_APP_BASE_URL}/notes/history/user/${userID}`,\r\n        \"GET\",\r\n        null,\r\n        { Authorization: `Bearer ${token}` }\r\n      );\r\n\r\n      if (responseData) {\r\n        setHistoryNotes(responseData.notes);\r\n      }\r\n    };\r\n    fetchHistory();\r\n  }, [sendRequest, userID, isOpen]);\r\n\r\n  const renderHistoryNotes = () => {\r\n    const notes = [];\r\n\r\n    if (error) {\r\n      return (\r\n        <ErrorInfo>\r\n          Something went wrong... We couldn't find Your history. Please try\r\n          again later\r\n        </ErrorInfo>\r\n      );\r\n    }\r\n\r\n    if (!historyNotes.length) {\r\n      return (\r\n        <NoHistory>\r\n          <SubTitle as=\"h3\">Your history is empty</SubTitle>\r\n          <Icon icon={farSurprise} />\r\n          <Button onClick={openAddNote}>\r\n            <span>Create new note!</span>\r\n          </Button>\r\n        </NoHistory>\r\n      );\r\n    }\r\n\r\n    historyNotes.map((note, index) => {\r\n      const { title, body, date } = note;\r\n      const completed =\r\n        date.split(\"T\")[0] + \" \" + date.split(\"T\")[1].match(/\\d*:\\d*:\\d*/);\r\n      return notes.push(\r\n        <HistoryItem\r\n          title={title}\r\n          body={body}\r\n          completed={completed}\r\n          key={index}\r\n        />\r\n      );\r\n    });\r\n    return notes;\r\n  };\r\n\r\n  return (\r\n    <SideBar size={\"50vw\"} isOpen={isOpen} setIsOpen={setIsOpen}>\r\n      <Title>Removed notes</Title>\r\n\r\n      {isLoading && <Spinner text=\"Loading...\" />}\r\n      <NotesWrapper>{!isLoading && renderHistoryNotes()}</NotesWrapper>\r\n    </SideBar>\r\n  );\r\n};\r\n\r\nconst Title = styled.h2`\r\n  color: white;\r\n  text-align: center;\r\n`;\r\n\r\nconst ErrorInfo = styled.p`\r\n  color: white;\r\n`;\r\n\r\nconst SubTitle = styled(Title)`\r\n  flex-basis: 100%;\r\n\r\n  font-size: 1.5rem;\r\n`;\r\n\r\nconst Icon = styled(FontAwesomeIcon)`\r\n  flex-basis: 100%;\r\n\r\n  font-size: 7rem;\r\n  color: ${({ theme }) => theme.colors.blue};\r\n`;\r\n\r\nconst NoHistory = styled.div`\r\n  height: 75%;\r\n\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst NotesWrapper = styled.div`\r\n  z-index: 999;\r\n  width: 90%;\r\n  height: 90%;\r\n\r\n  overflow-y: auto;\r\n\r\n  padding: 1rem;\r\n`;\r\n\r\nexport default NotesHistory;\r\n","import styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n/**\r\n * Functional Component - Renders round button on the screen\r\n * @param {Object} props - React props\r\n * @returns {JSX.Element}\r\n */\r\nconst RoundButton = ({\r\n  children,\r\n  text = \"\",\r\n  onClick = () => {},\r\n  isActive = false,\r\n}) => {\r\n  return (\r\n    <RoundBtn text={text} onClick={onClick} isActive={isActive}>\r\n      {children}\r\n    </RoundBtn>\r\n  );\r\n};\r\n\r\nRoundButton.propTypes = {\r\n  /**\r\n   * Button description\r\n   */\r\n  text: PropTypes.string.isRequired,\r\n\r\n  /**\r\n   * Function which is triggered on button click\r\n   */\r\n  onClick: PropTypes.func.isRequired,\r\n\r\n  /**\r\n   * if set to true component will keep hover effect permanently\r\n   */\r\n  isActive: PropTypes.bool,\r\n};\r\n\r\nconst RoundBtn = styled.button`\r\n  width: 7rem;\r\n  height: 7rem;\r\n\r\n  border-radius: 50%;\r\n  box-shadow: ${({ isActive, theme }) =>\r\n    isActive\r\n      ? `0 0 0 6px ${theme.colors.off},\r\n      0 0 0 8px ${theme.colors.main}`\r\n      : `0 0 0 2px white, 0 0 0 4px ${theme.colors.main}`};\r\n\r\n  font-size: 4rem;\r\n\r\n  background-color: ${({ theme }) => theme.colors.blue};\r\n  color: white;\r\n\r\n  transition: 300ms linear;\r\n\r\n  &:after {\r\n    content: \"${({ text }) => text}\";\r\n    position: absolute;\r\n\r\n    top: 2rem;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 25%;\r\n\r\n    transform: translateX(${({ isActive }) => (isActive ? \"0\" : \"-25%\")});\r\n    opacity: ${({ isActive }) => (isActive ? \"1\" : \"0\")};\r\n    visibility: ${({ isActive }) => (isActive ? \"visible\" : \"hidden\")};\r\n\r\n    font-size: 2rem;\r\n    color: ${({ theme }) => theme.colors.gray};\r\n    transition: all 300ms;\r\n    transition-property: opacity, transform, visibility;\r\n  }\r\n\r\n  &:focus,\r\n  &:hover {\r\n    box-shadow: 0 0 0 6px ${({ theme }) => theme.colors.off},\r\n      0 0 0 8px ${({ theme }) => theme.colors.main};\r\n\r\n    &:after {\r\n      transform: translateX(0);\r\n      opacity: 1;\r\n      visibility: visible;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default RoundButton;\r\n","/**\r\n * Triggers button on click / space / enter\r\n * @param {event} event - event object\r\n * @param {Function} callback - function which will be triggered on submit\r\n * @param {any} value - value will be passed to callback function\r\n * @returns {boolean}  true if value was changed\r\n */\r\nexport const handleChange = (event = {}, callback = () => {}, value = null) => {\r\n  if (!event.type) {\r\n    console.error(\"Event object does not contain required properites.\");\r\n  }\r\n\r\n  if (![13, 32].includes(event.keyCode) && event.type !== \"click\") return false;\r\n  callback(value);\r\n  return true;\r\n};\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { handleChange } from \"utils/handleButtonClick\";\r\n\r\nconst Note = ({ title, body, createdAt, _id, onNoteEdit, onNoteRemove }) => {\r\n  const dateString = createdAt.split(\"T\")[0];\r\n  const timeString = createdAt.match(/\\d*:\\d*:\\d*/g);\r\n\r\n  const handleNoteRemove = e => {\r\n    handleChange(e, onNoteRemove, _id);\r\n  };\r\n\r\n  const handleNoteEdit = e => {\r\n    const noteData = {\r\n      title,\r\n      body,\r\n      _id,\r\n    };\r\n\r\n    handleChange(e, onNoteEdit, noteData);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <NoteInfo>\r\n        <NoteTitle>{title}</NoteTitle>\r\n\r\n        <NoteTime>\r\n          <span>{dateString}</span> <span>{timeString}</span>\r\n        </NoteTime>\r\n      </NoteInfo>\r\n\r\n      <p>{body}</p>\r\n      <NoteSettings>\r\n        <Icon\r\n          onClick={handleNoteRemove}\r\n          onKeyDown={handleNoteRemove}\r\n          tooltip=\"Remove note\"\r\n          tabIndex=\"0\"\r\n        >\r\n          <FontAwesomeIcon icon={faTrashAlt} />\r\n        </Icon>\r\n\r\n        <Icon\r\n          onClick={handleNoteEdit}\r\n          onKeyDown={handleNoteEdit}\r\n          tooltip=\"Edit note\"\r\n          tabIndex=\"0\"\r\n        >\r\n          <FontAwesomeIcon icon={faEdit} />\r\n        </Icon>\r\n      </NoteSettings>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 1rem 0;\r\n  flex-basis: 30%;\r\n\r\n  min-height: 100px;\r\n  max-height: 25vh;\r\n\r\n  box-shadow: 0 0 0 2px ${({ theme }) => theme.colors.gray};\r\n  border-radius: 5px;\r\n\r\n  color: ${({ theme }) => theme.colors.text};\r\n\r\n  padding: 0.25rem;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst NoteInfo = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n\r\n  border-radius: 5px;\r\n  background-color: ${({ theme }) => theme.colors.off};\r\n\r\n  padding: 0.25rem;\r\n`;\r\n\r\nconst NoteTime = styled.p`\r\n  flex-basis: 100%;\r\n\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  color: ${({ theme }) => theme.colors.gray};\r\n`;\r\n\r\nconst NoteSettings = styled.div`\r\n  position: relative;\r\n\r\n  flex-basis: 100%;\r\n\r\n  display: flex;\r\n  justify-content: flex-end;\r\n\r\n  color: ${({ theme }) => theme.colors.gray};\r\n`;\r\n\r\nconst Icon = styled.span`\r\n  margin: 0 0.5rem;\r\n\r\n  outline: none;\r\n  cursor: pointer;\r\n\r\n  &:after {\r\n    content: ${({ tooltip }) => `\"${tooltip}\"`};\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n\r\n    color: ${({ theme }) => theme.colors.gray};\r\n\r\n    visibility: hidden;\r\n  }\r\n\r\n  &:hover:after,\r\n  &:focus:after {\r\n    visibility: visible;\r\n  }\r\n\r\n  &:hover,\r\n  &:focus {\r\n    color: ${({ theme }) => theme.colors.text};\r\n  }\r\n`;\r\n\r\nconst NoteTitle = styled.h6`\r\n  flex-basis: 100%;\r\n  margin-bottom: 0.25rem;\r\n\r\n  text-align: center;\r\n  font-size: 1.1rem;\r\n`;\r\n\r\nexport default Note;\r\n","import styled from \"styled-components\";\r\n\r\nimport Note from \"components/uiElements/Note\";\r\n\r\nconst UserNotes = ({ userNotes, onNoteEdit, onNoteRemove }) => {\r\n  const renderUserNotes = () => {\r\n    return userNotes.map((note, index) => (\r\n      <Note\r\n        key={index}\r\n        {...note}\r\n        onNoteEdit={onNoteEdit}\r\n        onNoteRemove={onNoteRemove}\r\n      />\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <Title>Your notes</Title>\r\n        {renderUserNotes()}\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  grid-area: 1/4/-1/-1;\r\n\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-around;\r\n  align-items: flex-start;\r\n\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  flex-basis: 100%;\r\n  height: 3rem;\r\n\r\n  font-size: 2.25rem;\r\n  text-align: center;\r\n\r\n  box-shadow: 0 0 5px 0 black;\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.blue};\r\n\r\n  color: white;\r\n  background: ${({ theme }) => theme.colors.blue};\r\n`;\r\n\r\nexport default UserNotes;\r\n","import { faCheck } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport { handleChange } from \"utils/handleButtonClick\";\r\n\r\n/**\r\n * Functional React component - renders custom checkbox on the screen\r\n * @returns {JSX.Element}\r\n */\r\nconst Checkbox = ({\r\n  description = \"\",\r\n  onClick = () => {},\r\n  initialValue = false,\r\n}) => {\r\n  const [checkboxState, setCheckboxState] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // update state on active ID change\r\n    setCheckboxState(initialValue);\r\n  }, [initialValue]);\r\n\r\n  /**\r\n   * Toggles checkbox and calls onClick callback provided to the component\r\n   * @return {undefined}\r\n   */\r\n  const toggleCheckbox = e => {\r\n    if (handleChange(e, onClick, !checkboxState)) {\r\n      setCheckboxState(prev => !prev);\r\n    }\r\n  };\r\n\r\n  const status = <FontAwesomeIcon icon={checkboxState ? faCheck : faTimes} />;\r\n\r\n  return (\r\n    <Wrapper>\r\n      {description && <Info>{description.toUpperCase()}</Info>}\r\n      <Box\r\n        isChecked={checkboxState}\r\n        onClick={toggleCheckbox}\r\n        onKeyDown={toggleCheckbox}\r\n        tabIndex=\"0\"\r\n      >\r\n        {status}\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nCheckbox.propTypes = {\r\n  /**\r\n   * Check box description\r\n   */\r\n  description: PropTypes.string,\r\n\r\n  /**\r\n   * A function which is called on checkbox click\r\n   */\r\n  onClick: PropTypes.func.isRequired,\r\n\r\n  /**\r\n   * Initial value. True - checked.\r\n   */\r\n  initialValue: PropTypes.bool,\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  margin-bottom: 1rem;\r\n  flex-basis: 100%;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Box = styled.div`\r\n  height: 25px;\r\n  width: 25px;\r\n\r\n  margin-left: 5px;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  border: 2px solid ${({ theme }) => theme.colors.off};\r\n  outline: none;\r\n  border-radius: 5px;\r\n\r\n  color: ${({ theme }) => theme.colors.off};\r\n\r\n  padding: 0.2rem;\r\n  cursor: pointer;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: ${({ theme }) => theme.colors.blue};\r\n  }\r\n`;\r\n\r\nconst Info = styled.p`\r\n  line-height: 25px;\r\n  user-select: none;\r\n  color: white;\r\n`;\r\n\r\nexport default Checkbox;\r\n","import styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { handleChange } from \"utils/handleButtonClick\";\r\n\r\n/**\r\n * Functional React component - renders custom radio input\r\n * @param {Object} props - React props\r\n * @returns {JSX.Element}\r\n */\r\nconst Radio = ({\r\n  active = null,\r\n  value = null,\r\n  onClick = () => {},\r\n  description = \"\",\r\n}) => {\r\n  const handleOnChange = e => {\r\n    handleChange(e, onClick, value);\r\n  };\r\n\r\n  return (\r\n    <Label onClick={handleOnChange}>\r\n      {description}\r\n      <RadioInput active={active} tabIndex=\"0\" onKeyDown={handleOnChange} />\r\n    </Label>\r\n  );\r\n};\r\n\r\nRadio.propTypes = {\r\n  /**\r\n   * if true, radio will be displayed as an active input\r\n   */\r\n  active: PropTypes.bool,\r\n\r\n  /**\r\n   * value which is passed to the onClick function\r\n   */\r\n  value: PropTypes.any.isRequired,\r\n\r\n  /**\r\n   * function which is called on every click\r\n   */\r\n  onClick: PropTypes.func.isRequired,\r\n\r\n  /**\r\n   * optional input description\r\n   */\r\n  description: PropTypes.string,\r\n};\r\n\r\nconst Label = styled.label`\r\n  text-align: center;\r\n  color: white;\r\n`;\r\n\r\nconst RadioInput = styled.div`\r\n  margin: 1rem;\r\n  position: relative;\r\n\r\n  width: 1.75rem;\r\n  height: 1.75rem;\r\n\r\n  border-radius: 50%;\r\n  outline: none;\r\n  box-shadow: 0 0 0 2px ${({ theme }) => theme.colors.off};\r\n\r\n  cursor: pointer;\r\n\r\n  &:hover::before,\r\n  &:focus::before {\r\n    clip-path: circle(35% at center);\r\n  }\r\n\r\n  &:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    border-radius: 50%;\r\n\r\n    background: ${({ theme }) => theme.colors.off};\r\n\r\n    clip-path: ${({ active }) =>\r\n      active ? \"circle(35% at center)\" : \"circle(0 at center)\"};\r\n    transition: 0.3s ease-out;\r\n  }\r\n`;\r\n\r\nexport default Radio;\r\n","import styled from \"styled-components\";\r\n\r\nimport Button from \"components/uiElements/Button\";\r\nimport Checkbox from \"components/uiElements/Checkbox\";\r\nimport SideBar from \"components/uiElements/SideBar\";\r\nimport SettingsContext from \"context/Settings\";\r\nimport { useContext } from \"react\";\r\nimport Radio from \"components/uiElements/Radio\";\r\n\r\nconst Settings = ({ isOpen, setIsOpen, handleClearHistory }) => {\r\n  const { setDarkMode, setFontSize, fontSize } = useContext(SettingsContext);\r\n\r\n  const handleDarkmode = () => {\r\n    setDarkMode(prev => !prev);\r\n  };\r\n\r\n  const handleFontSize = value => {\r\n    setFontSize(value);\r\n  };\r\n\r\n  return (\r\n    <SideBar isOpen={isOpen} setIsOpen={setIsOpen}>\r\n      <Title>Settings</Title>\r\n      <Form>\r\n        <Section separator>\r\n          <h4>Choose font size</h4>\r\n          <Radio\r\n            value={12}\r\n            description=\"Small\"\r\n            onClick={handleFontSize}\r\n            active={fontSize === 12}\r\n          />\r\n          <Radio\r\n            value={16}\r\n            description=\"Medium\"\r\n            onClick={handleFontSize}\r\n            active={fontSize === 16}\r\n          />\r\n          <Radio\r\n            value={20}\r\n            description=\"Large\"\r\n            onClick={handleFontSize}\r\n            active={fontSize === 20}\r\n          />\r\n        </Section>\r\n\r\n        <Section separator>\r\n          <h4>Turn off the lights</h4>\r\n          <Checkbox description=\"Darkmode\" onClick={handleDarkmode} />\r\n        </Section>\r\n\r\n        <Section>\r\n          Removes all notes from the history. This operation cannot be undone.\r\n          <Button onClick={handleClearHistory} danger={true}>\r\n            <span>Clear history</span>\r\n          </Button>\r\n        </Section>\r\n      </Form>\r\n    </SideBar>\r\n  );\r\n};\r\n\r\nconst Form = styled.form`\r\n  flex-basis: 90%;\r\n  height: 80%;\r\n\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-self: flex-start;\r\n`;\r\n\r\nconst Section = styled.section`\r\n  flex-basis: 100%;\r\n\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n\r\n  border-bottom: ${({ separator }) => (separator ? \"2px\" : 0)} solid\r\n    ${({ theme }) => theme.colors.gray};\r\n\r\n  color: white;\r\n\r\n  h4 {\r\n    z-index: 999;\r\n    flex-basis: 100%;\r\n\r\n    font-size: 1.25rem;\r\n    text-align: center;\r\n    letter-spacing: 2px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  z-index: 999;\r\n  font-size: 2rem;\r\n  color: white;\r\n`;\r\n\r\nexport default Settings;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faHistory } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faCog } from \"@fortawesome/free-solid-svg-icons\";\r\nimport styled from \"styled-components\";\r\nimport { useState, useContext, useEffect, useCallback } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport AuthContext from \"context/Auth\";\r\nimport AddNote from \"components/pages/AddNote\";\r\nimport NotesHistory from \"components/pages/History\";\r\nimport PageContainer from \"components/uiElements/PageContainer\";\r\nimport RoundButton from \"components/uiElements/RoundButton\";\r\nimport UserNotes from \"./UserNotes\";\r\nimport Spinner from \"components/uiElements/Spinner\";\r\nimport Settings from \"components/pages/Settings\";\r\nimport { useHttpRequest } from \"hooks/useHttpRequest\";\r\nimport { getSessionItem } from \"utils/handleSessionStorage\";\r\n\r\n// TODO notes should be kept within app state\r\n// TODO request should be send in the background\r\nconst UserPanel = () => {\r\n  // TODO refactor to reducer?\r\n  const [userNotes, setUserNotes] = useState([]);\r\n  const [noteTitle, setNoteTitle] = useState(\"\");\r\n  const [noteBody, setNoteBody] = useState(\"\");\r\n  const [createMode, setCreateMode] = useState(true);\r\n  const [editedNoteId, setEditedNoteId] = useState(null);\r\n\r\n  const [isAddNoteOpen, setIsAddNoteOpen] = useState(false);\r\n  const [isHistoryOpen, setIsHistoryOpen] = useState(false);\r\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\r\n\r\n  const { userID, isLoggedIn } = useContext(AuthContext);\r\n  const { error, sendRequest, isLoading } = useHttpRequest();\r\n\r\n  useEffect(() => {\r\n    const fetchNotes = async () => {\r\n      try {\r\n        const token = getSessionItem(\"token\");\r\n\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BASE_URL}/notes/user/${userID}`,\r\n          \"GET\",\r\n          null,\r\n          { Authorization: `Bearer ${token}` }\r\n        );\r\n\r\n        if (!responseData) {\r\n          return setUserNotes([]);\r\n        }\r\n        setUserNotes(responseData.notes);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n\r\n    fetchNotes();\r\n  }, [sendRequest, userID]);\r\n\r\n  const handleNoteAdd = async () => {\r\n    const url = createMode ? \"/notes\" : `/notes/${editedNoteId}`;\r\n    const method = createMode ? \"POST\" : \"PATCH\";\r\n    const body = createMode\r\n      ? { noteTitle, noteBody, userID }\r\n      : { body: noteBody, title: noteTitle };\r\n    const token = getSessionItem(\"token\");\r\n    let responseData;\r\n    try {\r\n      responseData = await sendRequest(\r\n        `${process.env.REACT_APP_BASE_URL}${url}`,\r\n        method,\r\n        JSON.stringify(body),\r\n        { \"Content-Type\": \"application/json\", Authorization: `Bearer ${token}` }\r\n      );\r\n\r\n      //! refactor\r\n      //! add error handling\r\n      if (!responseData) {\r\n        console.log(responseData);\r\n        console.log(error);\r\n        return;\r\n      }\r\n\r\n      setIsAddNoteOpen(false);\r\n    } catch (err) {\r\n      console.log(err);\r\n      return;\r\n    }\r\n\r\n    if (createMode) {\r\n      return setUserNotes(prev => [\r\n        ...prev,\r\n        {\r\n          title: responseData.note.title,\r\n          createdAt: responseData.note.createdAt,\r\n          body: responseData.note.body,\r\n          _id: responseData.note._id,\r\n        },\r\n      ]);\r\n    }\r\n    const newNotes = [...userNotes].map(note => {\r\n      if (note._id === editedNoteId) {\r\n        note.title = noteTitle;\r\n        note.body = noteBody;\r\n      }\r\n\r\n      return note;\r\n    });\r\n    setUserNotes(newNotes);\r\n  };\r\n\r\n  const handleNoteEdit = ({ title, body, _id }) => {\r\n    setCreateMode(false);\r\n    setNoteTitle(title);\r\n    setNoteBody(body);\r\n    setEditedNoteId(_id);\r\n    setIsAddNoteOpen(true);\r\n  };\r\n\r\n  const handleNoteRemove = async id => {\r\n    try {\r\n      const token = getSessionItem(\"token\");\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BASE_URL}/notes/${id}`,\r\n        \"DELETE\",\r\n        null,\r\n        { Authorization: `Bearer ${token}` }\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n      return;\r\n    }\r\n    // TODO: refactor to optimistic remove\r\n    setUserNotes(prev => prev.filter(el => el._id !== id));\r\n  };\r\n\r\n  const handleAddNote = useCallback(() => {\r\n    setNoteBody(\"\");\r\n    setNoteTitle(\"\");\r\n    setCreateMode(true);\r\n    setIsHistoryOpen(false);\r\n    setIsSettingsOpen(false);\r\n\r\n    setIsAddNoteOpen(prev => !prev);\r\n  }, []);\r\n\r\n  const handleNotesHistory = useCallback(() => {\r\n    setIsAddNoteOpen(false);\r\n    setIsSettingsOpen(false);\r\n\r\n    setIsHistoryOpen(prev => !prev);\r\n  }, []);\r\n\r\n  const handleSettings = useCallback(() => {\r\n    setIsAddNoteOpen(false);\r\n    setIsHistoryOpen(false);\r\n\r\n    setIsSettingsOpen(prev => !prev);\r\n  }, []);\r\n\r\n  const handleClearHistory = async () => {\r\n    const token = getSessionItem(\"token\");\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BASE_URL}/notes/history/user/${userID}`,\r\n        \"DELETE\",\r\n        null,\r\n        { Authorization: `Bearer ${token}` }\r\n      );\r\n    } catch (error) {\r\n      // !add error handling\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  if (!isLoggedIn) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  // TODO change error code\r\n  if (error) {\r\n    return <Redirect to={{ pathname: \"/error\", state: { code: 401 } }} />;\r\n  }\r\n\r\n  return (\r\n    <PageContainer>\r\n      <Options>\r\n        <Title>Management</Title>\r\n        <ButtonContainer>\r\n          <RoundButton\r\n            text={createMode ? \"Add note\" : \"Update note\"}\r\n            onClick={handleAddNote}\r\n            isActive={isAddNoteOpen}\r\n          >\r\n            <FontAwesomeIcon icon={faPlus} />\r\n          </RoundButton>\r\n        </ButtonContainer>\r\n\r\n        <ButtonContainer>\r\n          <RoundButton\r\n            text=\"History\"\r\n            onClick={handleNotesHistory}\r\n            isActive={isHistoryOpen}\r\n          >\r\n            <FontAwesomeIcon icon={faHistory} />\r\n          </RoundButton>\r\n        </ButtonContainer>\r\n\r\n        <ButtonContainer>\r\n          <RoundButton\r\n            text=\"Settings\"\r\n            onClick={handleSettings}\r\n            isActive={isSettingsOpen}\r\n          >\r\n            <FontAwesomeIcon icon={faCog} />\r\n          </RoundButton>\r\n        </ButtonContainer>\r\n      </Options>\r\n\r\n      <AddNote\r\n        isOpen={isAddNoteOpen}\r\n        createMode={createMode}\r\n        setIsOpen={handleAddNote}\r\n        onFormSubmit={handleNoteAdd}\r\n        onBodyChange={setNoteBody}\r\n        onTitleChange={setNoteTitle}\r\n        value={{ body: noteBody, title: noteTitle }}\r\n      />\r\n      <NotesHistory\r\n        isOpen={isHistoryOpen}\r\n        setIsOpen={handleNotesHistory}\r\n        openAddNote={handleAddNote}\r\n      />\r\n      <Settings\r\n        isOpen={isSettingsOpen}\r\n        setIsOpen={handleSettings}\r\n        handleClearHistory={handleClearHistory}\r\n      />\r\n\r\n      {isLoading ? (\r\n        <Spinner text=\"Loading...\" overlay={true} />\r\n      ) : (\r\n        <UserNotes\r\n          userNotes={userNotes}\r\n          setNotes={setUserNotes}\r\n          onNoteEdit={handleNoteEdit}\r\n          onNoteRemove={handleNoteRemove}\r\n        />\r\n      )}\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nconst Options = styled.section`\r\n  grid-area: 1/1/-1/4;\r\n\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  flex-basis: 100%;\r\n  height: 3rem;\r\n\r\n  font-size: 2.25rem;\r\n  text-align: center;\r\n\r\n  box-shadow: 0 0 5px 0 black;\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.blue};\r\n\r\n  color: white;\r\n  background: ${({ theme }) => theme.colors.blue};\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  position: relative;\r\n  flex-basis: 100%;\r\n\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: flex-start;\r\n\r\n  padding-left: 2rem;\r\n`;\r\n\r\nexport default UserPanel;\r\n","import GlobalStyleProvider from \"../context/globalStyle\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport { AuthContextProvider } from \"../context/Auth\";\nimport { SettingsContextProvider } from \"../context/Settings\";\nimport Theme from \"../context/Theme\";\nimport Error from \"./pages/Error\";\nimport MainContainer from \"./uiElements/MainContainer\";\nimport Menu from \"./uiElements/Menu\";\nimport Home from \"./pages/Home\";\nimport UserPanel from \"./pages/UserPanel\";\n\nconst App = () => {\n  return (\n    <>\n      <SettingsContextProvider>\n        <Theme>\n          <GlobalStyleProvider />\n\n          <AuthContextProvider>\n            <MainContainer>\n              <Menu title={\"All Your notes in a single place\"} />\n\n              <Switch>\n                <Route path=\"/\" component={Home} exact />\n                <Route path=\"/error\" component={Error} exact />\n                <Route path=\"/userPanel\" component={UserPanel} />\n                <Redirect to=\"/\" />\n              </Switch>\n            </MainContainer>\n          </AuthContextProvider>\n        </Theme>\n      </SettingsContextProvider>\n    </>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}